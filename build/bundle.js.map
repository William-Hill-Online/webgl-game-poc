{"version":3,"sources":["webpack:///webpack/bootstrap d5abf1be28153e65769c","webpack:///./src/engine/math/vector3.ts","webpack:///./src/engine/rendering/shared.textures.ts","webpack:///./src/engine/rendering/objects/shared.geometry.ts","webpack:///./src/engine/math/vector2.ts","webpack:///./src/engine/structs/vector2.array.ts","webpack:///./src/engine/structs/vector3.array.ts","webpack:///./src/engine/rendering/objects/object3d.ts","webpack:///./src/engine/math/point.ts","webpack:///./src/engine/math/math.helper.ts","webpack:///./src/engine/rendering/objects/model.ts","webpack:///./src/engine/math/matrix_4x4.ts","webpack:///./src/engine/rendering/rectangle.ts","webpack:///./src/engine/physics/boxCollider.ts","webpack:///./src/engine/UI/scene.navigation.controller.ts","webpack:///./src/engine/rendering/shaders/shading.program.2d.ts","webpack:///./src/engine/rendering/shaders/base.shading.program.ts","webpack:///./src/engine/rendering/shaders/shading.program.3d.ts","webpack:///./src/engine/UI/scene.controller.ts","webpack:///./src/engine/UI/layer.ts","webpack:///./src/game/objects/grass.ts","webpack:///./src/engine/rendering/sprite.ts","webpack:///./src/app.ts","webpack:///./src/engine/engine.ts","webpack:///./src/engine/UI/touch.ts","webpack:///./src/engine/rendering/texture.ts","webpack:///./src/engine/rendering/renderers/master.renderer.ts","webpack:///./src/engine/rendering/renderers/sprite.renderer.ts","webpack:///./src/engine/rendering/sprite.batch.ts","webpack:///./src/engine/rendering/shaders/shader.ts","webpack:///./src/engine/rendering/shaders/program.ts","webpack:///./src/engine/rendering/renderers/object3d.renderer.ts","webpack:///./src/engine/rendering/dummy/cube.ts","webpack:///./src/engine/physics/physics.ts","webpack:///./src/engine/rendering/objects/model.buffer.info.ts","webpack:///./src/engine/rendering/dummy/triangle.ts","webpack:///./src/engine/loaders/ogex.loader.ts","webpack:///./src/engine/rendering/ray.caster.ts","webpack:///./src/game/main.scene.controller.ts","webpack:///./src/engine/UI/scene.ts","webpack:///./src/engine/rendering/camera.ts","webpack:///./src/game/game.scene.controller.ts","webpack:///./src/engine/entities/player.ts","webpack:///./src/engine/entities/enemy.ts","webpack:///./src/game/objects/knight.ts","webpack:///./src/game/objects/knight.enemy.ts","webpack:///./src/game/objects/crate.ts","webpack:///./src/game/UI/banner.ts","webpack:///./src/engine/UI/gesture.recognizer.ts","webpack:///./src/game/UI/button.ts","webpack:///./src/engine/resources.ts"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;AC7DA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACxDA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACjCA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC7EA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACjCA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACjDA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;;;;;;;AClDA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mBAAmB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnDA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACzBA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACvBA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC/BA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAcxQA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC9DA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACxBA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACxDA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0GAA0G;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACvCA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;;;;;;;;AC3CA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0GAA0G;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACvCA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,sBAAsB;AACtB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;;;;;;;;ACzCA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC7BA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4BAA4B;AACnD,2BAA2B,8BAA8B;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AChFA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC/BA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC9GA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACvJA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACtBA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,4CAA4C;AAC5C,uCAAuC;AACvC,8CAA8C;AAC9C;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;;;;;;;;AC3CA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC1CA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;;;;;;;;ACrCA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,wCAAwC;AACxC,8BAA8B;AAC9B,uBAAuB;AACvB,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACtHA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACxCA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC7CA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qHAAqH;AACrH;AACA;AACA;AACA;AACA,mHAAmH;AACnH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iGAAiG;AACjG,SAAS;AACT;AACA;AACA;;;;;;;;AC5EA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACzGA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACxEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACzBA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC5CA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChzRA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACjEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACzCA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC5DA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC1EA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAcwBAAwB;AACxB;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC5IA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;;;;;;;ACtBA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACvDA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC5BA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC5BA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC5BA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACtBA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;;;;;;;;AC5BA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACvBA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,iEAAiE,uBAAuB,EAAE,4BAA4B;AACrJ;AACA,KAAK;AACL;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,2CAA2C","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 21);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d5abf1be28153e65769c","\"use strict\";\r\n/* Copyright 2017 William Hill.\r\n\nLicensed under the Apache License, Version 2.0 (the “License”);\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\n   http://www.apache.org/licenses/LICENSE-2.0\r\n\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an “AS IS” BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License. */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass Vector3 {\r\n    constructor(x, y, z) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n    }\r\n    /// Returns new Vector3 as a result of substraction. Substracts v2 from v1\r\n    static subtract(v1, v2) {\r\n        return new Vector3(v1.x - v2.x, v1.y - v2.y, v1.z - v2.z);\r\n    }\r\n    static get zero() {\r\n        return new Vector3(0, 0, 0);\r\n    }\r\n    static dot(v1, v2) {\r\n        return v1.x * v2.x + v1.y * v2.y + v1.z * v2.z;\r\n    }\r\n    static distance(v1, v2) {\r\n        return this.vectorLength(this.subtract(v1, v2));\r\n    }\r\n    /// Returns the length of the given Vector3\r\n    static vectorLength(v) {\r\n        return Math.sqrt(v.x * v.x + v.y * v.y + v.z * v.z);\r\n    }\r\n    /// Returns the normalized Vector3\r\n    static normalize(v) {\r\n        let l = Math.abs(Vector3.vectorLength(v));\r\n        return new Vector3(v.x / l, v.y / l, v.z / l);\r\n    }\r\n    print() {\r\n        console.log(\"Printing Vector3\" + \" x:\" + this.x + \" y: \" + this.y + \" z: \" + this.z);\r\n    }\r\n    static cross(v1, v2) {\r\n        return new Vector3(v1.y * v2.z - v1.z * v2.y, v1.z * v2.x - v1.x * v2.z, v1.x * v2.y - v1.y * v2.x);\r\n    }\r\n    static add(v1, v2) {\r\n        return new Vector3(v1.x + v2.x, v1.y + v2.y, v1.z + v2.z);\r\n    }\r\n    static mul(v, val) {\r\n        return new Vector3(v.x * val, v.y * val, v.z * val);\r\n    }\r\n}\r\nexports.Vector3 = Vector3;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/engine/math/vector3.ts\n// module id = 0\n// module chunks = 0","\"use strict\";\r\n/* Copyright 2017 William Hill.\r\n\nLicensed under the Apache License, Version 2.0 (the “License”);\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\n   http://www.apache.org/licenses/LICENSE-2.0\r\n\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an “AS IS” BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License. */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass SharedTextures {\r\n    constructor(glContext) {\r\n        this.glContext = glContext;\r\n        this.cache = new Map();\r\n    }\r\n    static get Instance() {\r\n        return this._instance;\r\n    }\r\n    static createInstance(glContext) {\r\n        this._instance = new SharedTextures(glContext);\r\n    }\r\n    setTexture(key, texture) {\r\n        this.cache.set(key, texture);\r\n    }\r\n    getTexture(key) {\r\n        return this.cache.get(key);\r\n    }\r\n}\r\nexports.SharedTextures = SharedTextures;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/engine/rendering/shared.textures.ts\n// module id = 1\n// module chunks = 0","\"use strict\";\r\n/* Copyright 2017 William Hill.\r\n\nLicensed under the Apache License, Version 2.0 (the “License”);\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\n   http://www.apache.org/licenses/LICENSE-2.0\r\n\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an “AS IS” BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License. */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vector3_array_1 = require(\"../../structs/vector3.array\");\r\nconst vector2_array_1 = require(\"../../structs/vector2.array\");\r\nclass SharedGeometry {\r\n    constructor(glContext) {\r\n        this.glContext = glContext;\r\n        this.vertexCount = 0;\r\n        this.indicesCount = 0;\r\n        this.textureCoordsCount = 0;\r\n        this.models = new Map();\r\n        this.vertices = new vector3_array_1.Vector3Array([]);\r\n        this.indecies = new vector3_array_1.Vector3Array([]);\r\n        this.textureCoords = new vector2_array_1.Vector2Array([]);\r\n        this.vertexBuffer = glContext.createBuffer();\r\n        this.indexBuffer = glContext.createBuffer();\r\n        this.textureBuffer = glContext.createBuffer();\r\n    }\r\n    static get Instance() {\r\n        return this._instance;\r\n    }\r\n    static createInstance(glContext) {\r\n        this._instance = new SharedGeometry(glContext);\r\n    }\r\n    registerModel(key, model) {\r\n        if (this.models.has(key)) {\r\n            throw \"Model already registered!\";\r\n        }\r\n        this.vertices.add(model.vertices);\r\n        this.indecies.add(model.indices);\r\n        this.textureCoords.add(model.textureCoordinates);\r\n        this.models.set(key, model);\r\n        model.modelBufferInfo.indiciesBufferInfo.glBuffer = this.indexBuffer;\r\n        model.modelBufferInfo.indiciesBufferInfo.offset = this.indicesCount;\r\n        model.modelBufferInfo.indiciesBufferInfo.length = model.indices.count;\r\n        model.modelBufferInfo.verticesBufferInfo.glBuffer = this.vertexBuffer;\r\n        model.modelBufferInfo.verticesBufferInfo.offset = this.vertexCount;\r\n        model.modelBufferInfo.verticesBufferInfo.length = model.vertices.count;\r\n        model.modelBufferInfo.textureBufferInfo.glBuffer = this.textureBuffer;\r\n        model.modelBufferInfo.textureBufferInfo.offset = this.textureCoordsCount;\r\n        model.modelBufferInfo.textureBufferInfo.length = model.textureCoordinates.count;\r\n        this.indicesCount += model.indices.count;\r\n        this.vertexCount += model.vertices.count;\r\n        this.textureCoordsCount += model.textureCoordinates.count;\r\n    }\r\n    modelForName(name) {\r\n        let model = this.models.get(name);\r\n        if (model == null) {\r\n            throw \"No such model\";\r\n        }\r\n        return model;\r\n    }\r\n    setupBuffers() {\r\n        // pass down the vertices data\r\n        this.glContext.bindBuffer(this.glContext.ARRAY_BUFFER, this.vertexBuffer);\r\n        this.glContext.bufferData(this.glContext.ARRAY_BUFFER, new Float32Array(this.vertices.data), this.glContext.STATIC_DRAW);\r\n        // pass down the indicies data\r\n        this.glContext.bindBuffer(this.glContext.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\r\n        this.glContext.bufferData(this.glContext.ELEMENT_ARRAY_BUFFER, new Uint16Array(this.indecies.data), this.glContext.STATIC_DRAW);\r\n        // pass down the texture data\r\n        this.glContext.bindBuffer(this.glContext.ARRAY_BUFFER, this.textureBuffer);\r\n        this.glContext.bufferData(this.glContext.ARRAY_BUFFER, new Float32Array(this.textureCoords.data), this.glContext.STATIC_DRAW);\r\n    }\r\n}\r\nexports.SharedGeometry = SharedGeometry;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/engine/rendering/objects/shared.geometry.ts\n// module id = 2\n// module chunks = 0","\"use strict\";\r\n/* Copyright 2017 William Hill.\r\n\nLicensed under the Apache License, Version 2.0 (the “License”);\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\n   http://www.apache.org/licenses/LICENSE-2.0\r\n\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an “AS IS” BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License. */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass Vector2 {\r\n    constructor(x, y) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n    static zero() {\r\n        return new Vector2(0, 0);\r\n    }\r\n    /// Returns the length of the given Vector2\r\n    static vectorLength(v) {\r\n        return Math.sqrt(v.x * v.x + v.y * v.y);\r\n    }\r\n    /// Returns the normalized Vector2\r\n    static normalize(v) {\r\n        let l = Math.abs(Vector2.vectorLength(v));\r\n        return new Vector2(v.x / l, v.y / l);\r\n    }\r\n}\r\nexports.Vector2 = Vector2;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/engine/math/vector2.ts\n// module id = 3\n// module chunks = 0","\"use strict\";\r\n/* Copyright 2017 William Hill.\r\n\nLicensed under the Apache License, Version 2.0 (the “License”);\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\n   http://www.apache.org/licenses/LICENSE-2.0\r\n\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an “AS IS” BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License. */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass Vector2Array {\r\n    constructor(array) {\r\n        this.array = [];\r\n        this.array = array;\r\n    }\r\n    push(vector) {\r\n        this.array.push(vector.x);\r\n        this.array.push(vector.y);\r\n    }\r\n    add(vector2Array) {\r\n        vector2Array.data.forEach(element => {\r\n            this.array.push(element);\r\n        });\r\n    }\r\n    append(newArray) {\r\n        newArray.forEach(item => {\r\n            this.push(item);\r\n        });\r\n    }\r\n    clear() {\r\n        this.array = [];\r\n    }\r\n    print() {\r\n        this.array.forEach(element => {\r\n            console.log(element);\r\n        });\r\n    }\r\n    get count() {\r\n        return this.array.length;\r\n    }\r\n    get data() {\r\n        return this.array;\r\n    }\r\n}\r\nexports.Vector2Array = Vector2Array;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/engine/structs/vector2.array.ts\n// module id = 4\n// module chunks = 0","\"use strict\";\r\n/* Copyright 2017 William Hill.\r\n\nLicensed under the Apache License, Version 2.0 (the “License”);\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\n   http://www.apache.org/licenses/LICENSE-2.0\r\n\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an “AS IS” BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License. */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass Vector3Array {\r\n    constructor(array) {\r\n        this.array = [];\r\n        this.array = array;\r\n    }\r\n    add(vector3Array) {\r\n        vector3Array.data.forEach(element => {\r\n            this.array.push(element);\r\n        });\r\n    }\r\n    append(newArray) {\r\n        newArray.forEach(item => {\r\n            this.push(item);\r\n        });\r\n    }\r\n    push(vector) {\r\n        this.array.push(vector.x);\r\n        this.array.push(vector.y);\r\n        this.array.push(vector.z);\r\n    }\r\n    clear() {\r\n        this.array = [];\r\n    }\r\n    get count() {\r\n        return this.array.length;\r\n    }\r\n    print() {\r\n        this.array.forEach(element => {\r\n            console.log(element);\r\n        });\r\n    }\r\n    get data() {\r\n        return this.array;\r\n    }\r\n}\r\nexports.Vector3Array = Vector3Array;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/engine/structs/vector3.array.ts\n// module id = 5\n// module chunks = 0","\"use strict\";\r\n/* Copyright 2017 William Hill.\r\n\nLicensed under the Apache License, Version 2.0 (the “License”);\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\n   http://www.apache.org/licenses/LICENSE-2.0\r\n\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an “AS IS” BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License. */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vector3_1 = require(\"../../math/vector3\");\r\nconst physics_1 = require(\"../../../engine/physics/physics\");\r\n/// Class responsible for managing 3d scene object\r\nclass Object3D {\r\n    constructor(position = vector3_1.Vector3.zero, rotation = vector3_1.Vector3.zero, scale = new vector3_1.Vector3(1, 1, 1)) {\r\n        this.position = position;\r\n        this.rotation = rotation;\r\n        this.scale = scale;\r\n        this.texture = null;\r\n        this.speed = 10;\r\n        this.onInit();\r\n    }\r\n    onInit() {\r\n    }\r\n    setTarget(pos) { this.target = pos; }\r\n    localToWorld(pt) {\r\n        return vector3_1.Vector3.add(pt, this.position);\r\n    }\r\n    update(dt) {\r\n        if (this.target) {\r\n            const diff = vector3_1.Vector3.subtract(this.target, this.position);\r\n            const dir = vector3_1.Vector3.normalize(diff);\r\n            let velocity = vector3_1.Vector3.mul(vector3_1.Vector3.mul(dir, this.speed), dt);\r\n            if (vector3_1.Vector3.vectorLength(diff) < vector3_1.Vector3.vectorLength(velocity)) {\r\n                velocity = diff;\r\n                this.target = null;\r\n            }\r\n            const prevPosition = this.position;\r\n            this.position = vector3_1.Vector3.add(this.position, velocity);\r\n            if (physics_1.Physics.checkForCollisions(this, this.scene.objects3D)) {\r\n                this.position = prevPosition;\r\n                this.target = null;\r\n            }\r\n        }\r\n    }\r\n}\r\nexports.Object3D = Object3D;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/engine/rendering/objects/object3d.ts\n// module id = 6\n// module chunks = 0","\"use strict\";\r\n/* Copyright 2017 William Hill.\r\n\nLicensed under the Apache License, Version 2.0 (the “License”);\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\n   http://www.apache.org/licenses/LICENSE-2.0\r\n\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an “AS IS” BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License. */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/// Class responsible for representing single coordinate in 2d space.\r\nclass Point {\r\n    constructor(x, y) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n    static get zero() {\r\n        return new Point(0, 0);\r\n    }\r\n}\r\nexports.Point = Point;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/engine/math/point.ts\n// module id = 7\n// module chunks = 0","\"use strict\";\r\n/* Copyright 2017 William Hill.\r\n\nLicensed under the Apache License, Version 2.0 (the “License”);\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\n   http://www.apache.org/licenses/LICENSE-2.0\r\n\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an “AS IS” BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License. */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass MathHelper {\r\n    static degToRad(d) {\r\n        return d * Math.PI / 180;\r\n    }\r\n    static radToDeg(r) {\r\n        return r * 180 / Math.PI;\r\n    }\r\n}\r\nexports.MathHelper = MathHelper;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/engine/math/math.helper.ts\n// module id = 8\n// module chunks = 0","\"use strict\";\r\n/* Copyright 2017 William Hill.\r\n\nLicensed under the Apache License, Version 2.0 (the “License”);\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\n   http://www.apache.org/licenses/LICENSE-2.0\r\n\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an “AS IS” BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License. */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vector3_array_1 = require(\"../../structs/vector3.array\");\r\nconst vector2_array_1 = require(\"../../structs/vector2.array\");\r\nconst model_buffer_info_1 = require(\"./model.buffer.info\");\r\nclass Model {\r\n    constructor(vertices = new vector3_array_1.Vector3Array([]), indices = new vector3_array_1.Vector3Array([]), normals = new vector3_array_1.Vector3Array([]), colors = new vector3_array_1.Vector3Array([]), textureCoordinates = new vector2_array_1.Vector2Array([])) {\r\n        this.vertices = vertices;\r\n        this.indices = indices;\r\n        this.normals = normals;\r\n        this.colors = colors;\r\n        this.textureCoordinates = textureCoordinates;\r\n        this.modelBufferInfo = new model_buffer_info_1.ModelBufferInfo();\r\n    }\r\n    get indicesCount() {\r\n        return this.indices.data.length;\r\n    }\r\n}\r\nexports.Model = Model;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/engine/rendering/objects/model.ts\n// module id = 9\n// module chunks = 0","\"use strict\";\r\n/* Copyright 2017 William Hill.\r\n\nLicensed under the Apache License, Version 2.0 (the “License”);\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\n   http://www.apache.org/licenses/LICENSE-2.0\r\n\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an “AS IS” BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License. */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vector3_1 = require(\"./vector3\");\r\n/// Class handling matrix operations \r\nclass Matrix4x4 {\r\n    /// Returns an indentity matrix\r\n    static identity() {\r\n        return [\r\n            1, 0, 0, 0,\r\n            0, 1, 0, 0,\r\n            0, 0, 1, 0,\r\n            0, 0, 0, 1\r\n        ];\r\n    }\r\n    /// Returns perspective matix based on the given values\r\n    static perspective(fieldOfViewInRadians, aspect, near, far) {\r\n        var f = Math.tan(Math.PI * 0.5 - 0.5 * fieldOfViewInRadians);\r\n        var rangeInv = 1.0 / (near - far);\r\n        return [\r\n            f / aspect, 0, 0, 0,\r\n            0, f, 0, 0,\r\n            0, 0, (near + far) * rangeInv, -1,\r\n            0, 0, near * far * rangeInv * 2, 0,\r\n        ];\r\n    }\r\n    /// Returns projection matrix. Note: This matrix flips the Y axis so 0 is at the top.\r\n    static projection(width, height, depth) {\r\n        return [\r\n            2 / width, 0, 0, 0,\r\n            0, -2 / height, 0, 0,\r\n            0, 0, 2 / depth, 0,\r\n            -1, 1, 0, 1,\r\n        ];\r\n    }\r\n    /// Multiplies two matrices\r\n    static multiply(a, b) {\r\n        var a00 = a[0 * 4 + 0];\r\n        var a01 = a[0 * 4 + 1];\r\n        var a02 = a[0 * 4 + 2];\r\n        var a03 = a[0 * 4 + 3];\r\n        var a10 = a[1 * 4 + 0];\r\n        var a11 = a[1 * 4 + 1];\r\n        var a12 = a[1 * 4 + 2];\r\n        var a13 = a[1 * 4 + 3];\r\n        var a20 = a[2 * 4 + 0];\r\n        var a21 = a[2 * 4 + 1];\r\n        var a22 = a[2 * 4 + 2];\r\n        var a23 = a[2 * 4 + 3];\r\n        var a30 = a[3 * 4 + 0];\r\n        var a31 = a[3 * 4 + 1];\r\n        var a32 = a[3 * 4 + 2];\r\n        var a33 = a[3 * 4 + 3];\r\n        var b00 = b[0 * 4 + 0];\r\n        var b01 = b[0 * 4 + 1];\r\n        var b02 = b[0 * 4 + 2];\r\n        var b03 = b[0 * 4 + 3];\r\n        var b10 = b[1 * 4 + 0];\r\n        var b11 = b[1 * 4 + 1];\r\n        var b12 = b[1 * 4 + 2];\r\n        var b13 = b[1 * 4 + 3];\r\n        var b20 = b[2 * 4 + 0];\r\n        var b21 = b[2 * 4 + 1];\r\n        var b22 = b[2 * 4 + 2];\r\n        var b23 = b[2 * 4 + 3];\r\n        var b30 = b[3 * 4 + 0];\r\n        var b31 = b[3 * 4 + 1];\r\n        var b32 = b[3 * 4 + 2];\r\n        var b33 = b[3 * 4 + 3];\r\n        return [\r\n            b00 * a00 + b01 * a10 + b02 * a20 + b03 * a30,\r\n            b00 * a01 + b01 * a11 + b02 * a21 + b03 * a31,\r\n            b00 * a02 + b01 * a12 + b02 * a22 + b03 * a32,\r\n            b00 * a03 + b01 * a13 + b02 * a23 + b03 * a33,\r\n            b10 * a00 + b11 * a10 + b12 * a20 + b13 * a30,\r\n            b10 * a01 + b11 * a11 + b12 * a21 + b13 * a31,\r\n            b10 * a02 + b11 * a12 + b12 * a22 + b13 * a32,\r\n            b10 * a03 + b11 * a13 + b12 * a23 + b13 * a33,\r\n            b20 * a00 + b21 * a10 + b22 * a20 + b23 * a30,\r\n            b20 * a01 + b21 * a11 + b22 * a21 + b23 * a31,\r\n            b20 * a02 + b21 * a12 + b22 * a22 + b23 * a32,\r\n            b20 * a03 + b21 * a13 + b22 * a23 + b23 * a33,\r\n            b30 * a00 + b31 * a10 + b32 * a20 + b33 * a30,\r\n            b30 * a01 + b31 * a11 + b32 * a21 + b33 * a31,\r\n            b30 * a02 + b31 * a12 + b32 * a22 + b33 * a32,\r\n            b30 * a03 + b31 * a13 + b32 * a23 + b33 * a33,\r\n        ];\r\n    }\r\n    /// Returns translated matrix\r\n    static translate(m, tx, ty, tz) {\r\n        let translate = [\r\n            1, 0, 0, 0,\r\n            0, 1, 0, 0,\r\n            0, 0, 1, 0,\r\n            tx, ty, tz, 1,\r\n        ];\r\n        return Matrix4x4.multiply(m, translate);\r\n    }\r\n    /// Look at\r\n    static lookAt(cameraPosition, target, up) {\r\n        var zAxis = vector3_1.Vector3.normalize(vector3_1.Vector3.subtract(cameraPosition, target));\r\n        var xAxis = vector3_1.Vector3.normalize(vector3_1.Vector3.cross(up, zAxis));\r\n        var yAxis = vector3_1.Vector3.cross(zAxis, xAxis);\r\n        return [\r\n            xAxis.x, xAxis.y, xAxis.z, 0,\r\n            yAxis.x, yAxis.y, yAxis.z, 0,\r\n            zAxis.x, zAxis.y, zAxis.z, 0,\r\n            cameraPosition.x,\r\n            cameraPosition.y,\r\n            cameraPosition.z,\r\n            1,\r\n        ];\r\n    }\r\n    /// Returns inverted matrix\r\n    static inverse(matrix) {\r\n        var m00 = matrix[0 * 4 + 0];\r\n        var m01 = matrix[0 * 4 + 1];\r\n        var m02 = matrix[0 * 4 + 2];\r\n        var m03 = matrix[0 * 4 + 3];\r\n        var m10 = matrix[1 * 4 + 0];\r\n        var m11 = matrix[1 * 4 + 1];\r\n        var m12 = matrix[1 * 4 + 2];\r\n        var m13 = matrix[1 * 4 + 3];\r\n        var m20 = matrix[2 * 4 + 0];\r\n        var m21 = matrix[2 * 4 + 1];\r\n        var m22 = matrix[2 * 4 + 2];\r\n        var m23 = matrix[2 * 4 + 3];\r\n        var m30 = matrix[3 * 4 + 0];\r\n        var m31 = matrix[3 * 4 + 1];\r\n        var m32 = matrix[3 * 4 + 2];\r\n        var m33 = matrix[3 * 4 + 3];\r\n        var tmp_0 = m22 * m33;\r\n        var tmp_1 = m32 * m23;\r\n        var tmp_2 = m12 * m33;\r\n        var tmp_3 = m32 * m13;\r\n        var tmp_4 = m12 * m23;\r\n        var tmp_5 = m22 * m13;\r\n        var tmp_6 = m02 * m33;\r\n        var tmp_7 = m32 * m03;\r\n        var tmp_8 = m02 * m23;\r\n        var tmp_9 = m22 * m03;\r\n        var tmp_10 = m02 * m13;\r\n        var tmp_11 = m12 * m03;\r\n        var tmp_12 = m20 * m31;\r\n        var tmp_13 = m30 * m21;\r\n        var tmp_14 = m10 * m31;\r\n        var tmp_15 = m30 * m11;\r\n        var tmp_16 = m10 * m21;\r\n        var tmp_17 = m20 * m11;\r\n        var tmp_18 = m00 * m31;\r\n        var tmp_19 = m30 * m01;\r\n        var tmp_20 = m00 * m21;\r\n        var tmp_21 = m20 * m01;\r\n        var tmp_22 = m00 * m11;\r\n        var tmp_23 = m10 * m01;\r\n        var t0 = (tmp_0 * m11 + tmp_3 * m21 + tmp_4 * m31) -\r\n            (tmp_1 * m11 + tmp_2 * m21 + tmp_5 * m31);\r\n        var t1 = (tmp_1 * m01 + tmp_6 * m21 + tmp_9 * m31) -\r\n            (tmp_0 * m01 + tmp_7 * m21 + tmp_8 * m31);\r\n        var t2 = (tmp_2 * m01 + tmp_7 * m11 + tmp_10 * m31) -\r\n            (tmp_3 * m01 + tmp_6 * m11 + tmp_11 * m31);\r\n        var t3 = (tmp_5 * m01 + tmp_8 * m11 + tmp_11 * m21) -\r\n            (tmp_4 * m01 + tmp_9 * m11 + tmp_10 * m21);\r\n        var d = 1.0 / (m00 * t0 + m10 * t1 + m20 * t2 + m30 * t3);\r\n        return [\r\n            d * t0,\r\n            d * t1,\r\n            d * t2,\r\n            d * t3,\r\n            d * ((tmp_1 * m10 + tmp_2 * m20 + tmp_5 * m30) -\r\n                (tmp_0 * m10 + tmp_3 * m20 + tmp_4 * m30)),\r\n            d * ((tmp_0 * m00 + tmp_7 * m20 + tmp_8 * m30) -\r\n                (tmp_1 * m00 + tmp_6 * m20 + tmp_9 * m30)),\r\n            d * ((tmp_3 * m00 + tmp_6 * m10 + tmp_11 * m30) -\r\n                (tmp_2 * m00 + tmp_7 * m10 + tmp_10 * m30)),\r\n            d * ((tmp_4 * m00 + tmp_9 * m10 + tmp_10 * m20) -\r\n                (tmp_5 * m00 + tmp_8 * m10 + tmp_11 * m20)),\r\n            d * ((tmp_12 * m13 + tmp_15 * m23 + tmp_16 * m33) -\r\n                (tmp_13 * m13 + tmp_14 * m23 + tmp_17 * m33)),\r\n            d * ((tmp_13 * m03 + tmp_18 * m23 + tmp_21 * m33) -\r\n                (tmp_12 * m03 + tmp_19 * m23 + tmp_20 * m33)),\r\n            d * ((tmp_14 * m03 + tmp_19 * m13 + tmp_22 * m33) -\r\n                (tmp_15 * m03 + tmp_18 * m13 + tmp_23 * m33)),\r\n            d * ((tmp_17 * m03 + tmp_20 * m13 + tmp_23 * m23) -\r\n                (tmp_16 * m03 + tmp_21 * m13 + tmp_22 * m23)),\r\n            d * ((tmp_14 * m22 + tmp_17 * m32 + tmp_13 * m12) -\r\n                (tmp_16 * m32 + tmp_12 * m12 + tmp_15 * m22)),\r\n            d * ((tmp_20 * m32 + tmp_12 * m02 + tmp_19 * m22) -\r\n                (tmp_18 * m22 + tmp_21 * m32 + tmp_13 * m02)),\r\n            d * ((tmp_18 * m12 + tmp_23 * m32 + tmp_15 * m02) -\r\n                (tmp_22 * m32 + tmp_14 * m02 + tmp_19 * m12)),\r\n            d * ((tmp_22 * m22 + tmp_16 * m02 + tmp_21 * m12) -\r\n                (tmp_20 * m12 + tmp_23 * m22 + tmp_17 * m02))\r\n        ];\r\n    }\r\n    static print(m) {\r\n        console.log(\"M-Start\");\r\n        console.log(m[0] + \" \" + m[1] + \" \" + m[2] + \" \" + m[3]);\r\n        console.log(m[4] + \" \" + m[5] + \" \" + m[6] + \" \" + m[7]);\r\n        console.log(m[8] + \" \" + m[9] + \" \" + m[10] + \" \" + m[11]);\r\n        console.log(m[12] + \" \" + m[13] + \" \" + m[14] + \" \" + m[15]);\r\n        console.log(\"M-End\");\r\n    }\r\n    static xRotation(angleInRadians) {\r\n        var c = Math.cos(angleInRadians);\r\n        var s = Math.sin(angleInRadians);\r\n        return [\r\n            1, 0, 0, 0,\r\n            0, c, s, 0,\r\n            0, -s, c, 0,\r\n            0, 0, 0, 1,\r\n        ];\r\n    }\r\n    static yRotation(angleInRadians) {\r\n        var c = Math.cos(angleInRadians);\r\n        var s = Math.sin(angleInRadians);\r\n        return [\r\n            c, 0, -s, 0,\r\n            0, 1, 0, 0,\r\n            s, 0, c, 0,\r\n            0, 0, 0, 1,\r\n        ];\r\n    }\r\n    static zRotation(angleInRadians) {\r\n        var c = Math.cos(angleInRadians);\r\n        var s = Math.sin(angleInRadians);\r\n        return [\r\n            c, s, 0, 0,\r\n            -s, c, 0, 0,\r\n            0, 0, 1, 0,\r\n            0, 0, 0, 1,\r\n        ];\r\n    }\r\n    static xRotate(m, angleInRadians) {\r\n        return Matrix4x4.multiply(m, Matrix4x4.xRotation(angleInRadians));\r\n    }\r\n    static yRotate(m, angleInRadians) {\r\n        return Matrix4x4.multiply(m, Matrix4x4.yRotation(angleInRadians));\r\n    }\r\n    static zRotate(m, angleInRadians) {\r\n        return Matrix4x4.multiply(m, Matrix4x4.zRotation(angleInRadians));\r\n    }\r\n    static scale(m, sx, sy, sz) {\r\n        let scaling = [\r\n            sx, 0, 0, 0,\r\n            0, sy, 0, 0,\r\n            0, 0, sz, 0,\r\n            0, 0, 0, 1,\r\n        ];\r\n        return Matrix4x4.multiply(m, scaling);\r\n    }\r\n}\r\nexports.Matrix4x4 = Matrix4x4;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/engine/math/matrix_4x4.ts\n// module id = 10\n// module chunks = 0","\"use strict\";\r\n/* Copyright 2017 William Hill.\r\n\nLicensed under the Apache License, Version 2.0 (the “License”);\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\n   http://www.apache.org/licenses/LICENSE-2.0\r\n\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an “AS IS” BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License. */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vector2_1 = require(\"../math/vector2\");\r\n/// Class responsible for containing information about particular region of space\r\nclass Rectangle {\r\n    constructor(x, y, width, height) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.width = width;\r\n        this.height = height;\r\n    }\r\n    /// Returns the bottom y coordinate of this rectangle\r\n    get bottom() {\r\n        return this.y + this.height;\r\n    }\r\n    /// Returns the right x coordinate of this rectangle\r\n    get right() {\r\n        return this.x + this.width;\r\n    }\r\n    print() {\r\n        console.log(\"x \" + this.x + \" y \" + this.y + \" width \" + this.width + \" height \" + this.height);\r\n    }\r\n    /// Tells if the given point is inside the rectangle\r\n    isPointInside(point) {\r\n        console.log(\"Test point inside \" + point.x + \" \" + point.y);\r\n        console.log(this.x + \" y: \" + this.y + \" r: \" + this.right + \" b: \" + this.bottom);\r\n        console.log(\"////\");\r\n        return (this.x <= point.x && point.x < this.right) && (this.y <= point.y && point.y <= this.bottom);\r\n    }\r\n    static get zero() {\r\n        return new Rectangle(0, 0, 0, 0);\r\n    }\r\n    static fromMiddlePoint(middle, size) {\r\n        return new Rectangle(middle.x - size.x / 2, middle.y - size.y / 2, size.x, size.y);\r\n    }\r\n    transformAroundPoint(point) {\r\n        let w_2 = this.width / 2.0;\r\n        let h_2 = this.height / 2.0;\r\n        let newX = point.x - w_2;\r\n        let newY = point.y + h_2;\r\n        return new Rectangle(newX, newY, this.width, this.height);\r\n    }\r\n    get middle() {\r\n        return new vector2_1.Vector2(this.x + this.width / 2, this.y + this.height / 2);\r\n    }\r\n    get size() {\r\n        return new vector2_1.Vector2(this.width, this.height);\r\n    }\r\n}\r\nexports.Rectangle = Rectangle;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/engine/rendering/rectangle.ts\n// module id = 11\n// module chunks = 0","\"use strict\";\r\n/* Copyright 2017 William Hill.\r\n\nLicensed under the Apache License, Version 2.0 (the “License”);\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\n   http://www.apache.org/licenses/LICENSE-2.0\r\n\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an “AS IS” BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License. */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst rectangle_1 = require(\"../rendering/rectangle\");\r\nclass BoxCollider {\r\n    get rect() {\r\n        return this._rect;\r\n    }\r\n    constructor(localPosition, size) {\r\n        this._rect = rectangle_1.Rectangle.fromMiddlePoint(localPosition, size);\r\n    }\r\n}\r\nexports.BoxCollider = BoxCollider;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/engine/physics/boxCollider.ts\n// module id = 12\n// module chunks = 0","\"use strict\";\r\n/* Copyright 2017 William Hill.\r\n\nLicensed under the Apache License, Version 2.0 (the “License”);\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\n   http://www.apache.org/licenses/LICENSE-2.0\r\n\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an “AS IS” BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License. */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/// Class responsible for managing stack of scene controllers\r\nclass SceneNavigationController {\r\n    /// Returns the top most SceneController. Returns null if there are no scene controllers \r\n    constructor(rootSceneController = null) {\r\n        this.sceneControllers = [];\r\n        if (rootSceneController != null) {\r\n            rootSceneController.sceneNavigationController = this;\r\n            this.sceneControllers.push(rootSceneController);\r\n        }\r\n    }\r\n    /// Retrieves the top most scene controller\r\n    get topSceneController() {\r\n        let count = this.sceneControllers.length;\r\n        if (count == 0) {\r\n            return null;\r\n        }\r\n        return this.sceneControllers[count - 1];\r\n    }\r\n    /// Navigates to the given scene controller\r\n    pushSceneController(sceneController) {\r\n        // pass the raycaster to new scene controller\r\n        sceneController.rayCaster = this.topSceneController.rayCaster;\r\n        sceneController.rayCaster.camera = sceneController.scene.camera;\r\n        // pass scene dims\r\n        sceneController.scene.width = this.topSceneController.scene.width;\r\n        sceneController.scene.height = this.topSceneController.scene.height;\r\n        sceneController.sceneNavigationController = this;\r\n        sceneController.sceneDidLoad();\r\n        sceneController.sceneDidResize();\r\n        this.sceneControllers.push(sceneController);\r\n    }\r\n    /// Navigates back to previous scene controller\r\n    popSceneController() {\r\n        let count = this.sceneControllers.length;\r\n        if (count == 0) {\r\n            return;\r\n        }\r\n        this.sceneControllers[count - 1].sceneNavigationController = null;\r\n        this.sceneControllers.pop();\r\n    }\r\n}\r\nexports.SceneNavigationController = SceneNavigationController;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/engine/UI/scene.navigation.controller.ts\n// module id = 13\n// module chunks = 0","\"use strict\";\r\n/* Copyright 2017 William Hill.\r\n\nLicensed under the Apache License, Version 2.0 (the “License”);\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\n   http://www.apache.org/licenses/LICENSE-2.0\r\n\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an “AS IS” BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License. */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst base_shading_program_1 = require(\"./base.shading.program\");\r\nvar ShadingProgram2dLocations;\r\n(function (ShadingProgram2dLocations) {\r\n    ShadingProgram2dLocations[ShadingProgram2dLocations[\"POSITION\"] = 0] = \"POSITION\";\r\n    ShadingProgram2dLocations[ShadingProgram2dLocations[\"TEXTURE_COORDINATES\"] = 1] = \"TEXTURE_COORDINATES\";\r\n    ShadingProgram2dLocations[ShadingProgram2dLocations[\"RESOLUTION\"] = 2] = \"RESOLUTION\";\r\n})(ShadingProgram2dLocations = exports.ShadingProgram2dLocations || (exports.ShadingProgram2dLocations = {}));\r\nclass ShadingProgram2d extends base_shading_program_1.BaseShadingProgram {\r\n    getLocation(location) {\r\n        switch (location) {\r\n            case ShadingProgram2dLocations.POSITION:\r\n                return this.positionAttributeLocation;\r\n            case ShadingProgram2dLocations.TEXTURE_COORDINATES:\r\n                return this.textureCoordinatesAttributeLocation;\r\n            case ShadingProgram2dLocations.RESOLUTION:\r\n                return this.resolutionUniformLocation;\r\n        }\r\n    }\r\n    setupLocations() {\r\n        this.resolutionUniformLocation = this.glContext.getUniformLocation(this.programId, \"u_resolution\");\r\n        this.textureCoordinatesAttributeLocation = this.glContext.getAttribLocation(this.programId, \"a_texcoord\");\r\n        this.positionAttributeLocation = this.glContext.getAttribLocation(this.programId, \"a_position\");\r\n    }\r\n}\r\nexports.ShadingProgram2d = ShadingProgram2d;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/engine/rendering/shaders/shading.program.2d.ts\n// module id = 14\n// module chunks = 0","\"use strict\";\r\n/* Copyright 2017 William Hill.\r\n\nLicensed under the Apache License, Version 2.0 (the “License”);\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\n   http://www.apache.org/licenses/LICENSE-2.0\r\n\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an “AS IS” BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License. */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst shader_1 = require(\"./shader\");\r\nconst program_1 = require(\"./program\");\r\nclass BaseShadingProgram {\r\n    constructor(glContext, vertexShaderSource, fragmentShaderSource) {\r\n        this.glContext = glContext;\r\n        let vs = shader_1.Shader.createFromSource(glContext, vertexShaderSource, this.glContext.VERTEX_SHADER);\r\n        if (vs == null) {\r\n            throw \"Vertex shader is empty!\";\r\n        }\r\n        let fs = shader_1.Shader.createFromSource(glContext, fragmentShaderSource, this.glContext.FRAGMENT_SHADER);\r\n        if (fs == null) {\r\n            throw \"Fragment shader is empty!\";\r\n        }\r\n        this.program = program_1.Program.createProgram(glContext, vs, fs);\r\n        if (this.program == null) {\r\n            throw \"Program is empty!\";\r\n        }\r\n        this.setupLocations();\r\n    }\r\n    get programId() {\r\n        return this.program.programId;\r\n    }\r\n    /// Uses the program\r\n    useProgram() {\r\n        return this.glContext.useProgram(this.program.programId);\r\n    }\r\n    setupLocations() { }\r\n}\r\nexports.BaseShadingProgram = BaseShadingProgram;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/engine/rendering/shaders/base.shading.program.ts\n// module id = 15\n// module chunks = 0","\"use strict\";\r\n/* Copyright 2017 William Hill.\r\n\nLicensed under the Apache License, Version 2.0 (the “License”);\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\n   http://www.apache.org/licenses/LICENSE-2.0\r\n\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an “AS IS” BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License. */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst base_shading_program_1 = require(\"./base.shading.program\");\r\nvar ShadingProgram3dLocations;\r\n(function (ShadingProgram3dLocations) {\r\n    ShadingProgram3dLocations[ShadingProgram3dLocations[\"POSITION\"] = 0] = \"POSITION\";\r\n    ShadingProgram3dLocations[ShadingProgram3dLocations[\"TEXTURE\"] = 1] = \"TEXTURE\";\r\n    ShadingProgram3dLocations[ShadingProgram3dLocations[\"MATRIX\"] = 2] = \"MATRIX\";\r\n})(ShadingProgram3dLocations = exports.ShadingProgram3dLocations || (exports.ShadingProgram3dLocations = {}));\r\nclass ShadingProgram3d extends base_shading_program_1.BaseShadingProgram {\r\n    getLocation(location) {\r\n        switch (location) {\r\n            case ShadingProgram3dLocations.POSITION:\r\n                return this.positionAttributeLocation;\r\n            case ShadingProgram3dLocations.TEXTURE:\r\n                return this.textureAttributeLocation;\r\n            case ShadingProgram3dLocations.MATRIX:\r\n                return this.matrixUniformLocation;\r\n        }\r\n    }\r\n    setupLocations() {\r\n        this.positionAttributeLocation = this.glContext.getAttribLocation(this.programId, \"a_position\");\r\n        this.textureAttributeLocation = this.glContext.getAttribLocation(this.programId, \"a_texcoord\");\r\n        this.matrixUniformLocation = this.glContext.getUniformLocation(this.programId, \"u_matrix\");\r\n    }\r\n}\r\nexports.ShadingProgram3d = ShadingProgram3d;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/engine/rendering/shaders/shading.program.3d.ts\n// module id = 16\n// module chunks = 0","\"use strict\";\r\n/* Copyright 2017 William Hill.\r\n\nLicensed under the Apache License, Version 2.0 (the “License”);\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\n   http://www.apache.org/licenses/LICENSE-2.0\r\n\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an “AS IS” BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License. */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst scene_1 = require(\"./scene\");\r\nconst point_1 = require(\"../math/point\");\r\n/// Class responsible for containing all game objects and logic for a single scene (e.g. menu, or game map)\r\nclass SceneController {\r\n    constructor() {\r\n        this.scene = new scene_1.Scene();\r\n    }\r\n    get layers() {\r\n        return this.scene.layers;\r\n    }\r\n    sceneDidLoad() { }\r\n    sceneDidResize() { }\r\n    update() { }\r\n    touchesBegan(touch) {\r\n        // Loop though all sprites and look if any of them was tapped\r\n        this.layers.forEach(layer => {\r\n            layer.sprites.forEach(sprite => {\r\n                if (sprite.frame.isPointInside(new point_1.Point(touch.x, touch.y))) {\r\n                    if (sprite.tapAction != null) {\r\n                        sprite.tapAction();\r\n                    }\r\n                }\r\n            });\r\n        });\r\n    }\r\n}\r\nexports.SceneController = SceneController;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/engine/UI/scene.controller.ts\n// module id = 17\n// module chunks = 0","\"use strict\";\r\n/* Copyright 2017 William Hill.\r\n\nLicensed under the Apache License, Version 2.0 (the “License”);\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\n   http://www.apache.org/licenses/LICENSE-2.0\r\n\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an “AS IS” BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License. */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/// Class responsible for managing a group of 2D sprites.\r\nclass Layer {\r\n    constructor() {\r\n        this._sprites = [];\r\n    }\r\n    /// Returns all sprites added to this layer.\r\n    get sprites() {\r\n        return this._sprites;\r\n    }\r\n    /// Adds new sprite to the scene\r\n    addSprite(sprite) {\r\n        this._sprites.push(sprite);\r\n    }\r\n}\r\nexports.Layer = Layer;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/engine/UI/layer.ts\n// module id = 18\n// module chunks = 0","\"use strict\";\r\n/* Copyright 2017 William Hill.\r\n\nLicensed under the Apache License, Version 2.0 (the “License”);\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\n   http://www.apache.org/licenses/LICENSE-2.0\r\n\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an “AS IS” BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License. */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst object3d_1 = require(\"../../engine/rendering/objects/object3d\");\r\nconst shared_geometry_1 = require(\"../../engine/rendering/objects/shared.geometry\");\r\nconst shared_textures_1 = require(\"../../engine/rendering/shared.textures\");\r\nconst vector3_array_1 = require(\"../../engine/structs/vector3.array\");\r\nconst vector2_array_1 = require(\"../../engine/structs/vector2.array\");\r\nconst model_1 = require(\"../../engine/rendering/objects/model\");\r\nclass Grass extends object3d_1.Object3D {\r\n    onInit() {\r\n        this.model = shared_geometry_1.SharedGeometry.Instance.modelForName(\"grass\");\r\n        this.texture = shared_textures_1.SharedTextures.Instance.getTexture(\"grass\");\r\n    }\r\n}\r\nexports.Grass = Grass;\r\nclass GrassModel extends model_1.Model {\r\n    static createModel() {\r\n        let size = 20;\r\n        let numberOfHorizontalPlanes = 50;\r\n        let numberOfVerticalPlanes = 50;\r\n        var verts = [];\r\n        var indices = [];\r\n        var textureCoords = [];\r\n        for (var j = 0; j < numberOfVerticalPlanes; j++) {\r\n            for (var i = 0; i < numberOfHorizontalPlanes; i++) {\r\n                let totalNumberOfIndicies = i * 4 + j * numberOfHorizontalPlanes * 4;\r\n                let v = this.generateVerticlesForHorizontalPlane(j * size, i * size, size);\r\n                let ind = this.generateIndicesForHorizontalPlane(totalNumberOfIndicies);\r\n                let txc = this.generateTextureCoordinates();\r\n                verts = verts.concat(v);\r\n                indices = indices.concat(ind);\r\n                textureCoords = textureCoords.concat(txc);\r\n            }\r\n        }\r\n        return new GrassModel(new vector3_array_1.Vector3Array(verts), new vector3_array_1.Vector3Array(indices), new vector3_array_1.Vector3Array([]), new vector3_array_1.Vector3Array([]), new vector2_array_1.Vector2Array(textureCoords));\r\n    }\r\n    static generateTextureCoordinates() {\r\n        return [0.0, 0.0,\r\n            1.0, 0.0,\r\n            0.0, 1.0,\r\n            1.0, 1.0];\r\n    }\r\n    static generateIndicesForHorizontalPlane(offset) {\r\n        return [offset + 0, offset + 1,\r\n            offset + 2, offset + 1,\r\n            offset + 3, offset + 2];\r\n    }\r\n    static generateVerticlesForHorizontalPlane(offsetX, offsetZ, size) {\r\n        let v0x = offsetX;\r\n        let v0y = 0;\r\n        let v0z = offsetZ;\r\n        let v1x = offsetX;\r\n        let v1y = 0;\r\n        let v1z = offsetZ + size;\r\n        let v2x = offsetX + size;\r\n        let v2y = 0;\r\n        let v2z = offsetZ;\r\n        let v3x = offsetX + size;\r\n        let v3y = 0;\r\n        let v3z = offsetZ + size;\r\n        return [v0x, v0y, v0z,\r\n            v1x, v1y, v1z,\r\n            v2x, v2y, v2z,\r\n            v3x, v3y, v3z,\r\n        ];\r\n    }\r\n}\r\nexports.GrassModel = GrassModel;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/game/objects/grass.ts\n// module id = 19\n// module chunks = 0","\"use strict\";\r\n/* Copyright 2017 William Hill.\r\n\nLicensed under the Apache License, Version 2.0 (the “License”);\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\n   http://www.apache.org/licenses/LICENSE-2.0\r\n\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an “AS IS” BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License. */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst gesture_recognizer_1 = require(\"../UI/gesture.recognizer\");\r\nclass Sprite {\r\n    constructor(frame) {\r\n        this.frame = frame;\r\n        this._gestureRecognizer = new gesture_recognizer_1.GestureRecognizer();\r\n        this.onInit();\r\n    }\r\n    onInit() {\r\n    }\r\n    set tapAction(action) {\r\n        this._gestureRecognizer.action = action;\r\n    }\r\n    get tapAction() {\r\n        return this._gestureRecognizer.action;\r\n    }\r\n}\r\nexports.Sprite = Sprite;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/engine/rendering/sprite.ts\n// module id = 20\n// module chunks = 0","\"use strict\";\r\n/* Copyright 2017 William Hill.\r\n\nLicensed under the Apache License, Version 2.0 (the “License”);\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\n   http://www.apache.org/licenses/LICENSE-2.0\r\n\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an “AS IS” BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License. */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst engine_1 = require(\"./engine/engine\");\r\nconst scene_navigation_controller_1 = require(\"./engine/UI/scene.navigation.controller\");\r\nconst main_scene_controller_1 = require(\"./game/main.scene.controller\");\r\nconst resources_1 = require(\"./engine/resources\");\r\nconst shared_geometry_1 = require(\"./engine/rendering/objects/shared.geometry\");\r\nconst grass_1 = require(\"./game/objects/grass\");\r\nclass App {\r\n    constructor() {\r\n        this.engine = new engine_1.Engine();\r\n        this.engine.setup();\r\n        this.resources = new resources_1.Resources();\r\n        Promise.all([this.resources.load({\r\n                url: 'resources/play-button.png',\r\n                name: \"play-button\",\r\n                type: resources_1.Type.IMAGE\r\n            }),\r\n            this.resources.load({\r\n                url: 'resources/knight.jpg',\r\n                name: \"knight\",\r\n                type: resources_1.Type.IMAGE\r\n            }),\r\n            this.resources.load({\r\n                url: 'resources/knight-enemy.jpg',\r\n                name: \"knight-enemy\",\r\n                type: resources_1.Type.IMAGE\r\n            }),\r\n            this.resources.load({\r\n                url: 'resources/grass.jpg',\r\n                name: \"grass\",\r\n                type: resources_1.Type.IMAGE\r\n            }),\r\n            this.resources.load({\r\n                url: 'resources/crate.jpg',\r\n                name: \"crate\",\r\n                type: resources_1.Type.IMAGE\r\n            }),\r\n            this.resources.load({\r\n                url: 'resources/banner.png',\r\n                name: \"banner\",\r\n                type: resources_1.Type.IMAGE\r\n            }),\r\n            this.resources.load({\r\n                url: 'resources/shaders/v1/vs_2d.glsl',\r\n                name: \"2d_vertex_shader\",\r\n                type: resources_1.Type.TEXT\r\n            }),\r\n            this.resources.load({\r\n                url: 'resources/shaders/v1/fs_2d.glsl',\r\n                name: \"2d_fragment_shader\",\r\n                type: resources_1.Type.TEXT\r\n            }),\r\n            this.resources.load({\r\n                url: 'resources/shaders/v1/vs_3d.glsl',\r\n                name: \"3d_vertex_shader\",\r\n                type: resources_1.Type.TEXT\r\n            }),\r\n            this.resources.load({\r\n                url: 'resources/shaders/v1/fs_3d.glsl',\r\n                name: \"3d_fragment_shader\",\r\n                type: resources_1.Type.TEXT\r\n            }),\r\n            this.resources.load({\r\n                url: 'resources/knight.ogex',\r\n                name: \"knight\",\r\n                type: resources_1.Type.TEXT\r\n            }),\r\n            this.resources.load({\r\n                url: 'resources/crate.ogex',\r\n                name: \"crate\",\r\n                type: resources_1.Type.TEXT\r\n            })\r\n        ]).then(arr => {\r\n            this.engine.createTextureWithImage(\"play-button\", arr[0]);\r\n            this.engine.createTextureWithImage(\"knight\", arr[1]);\r\n            this.engine.createTextureWithImage(\"knight-enemy\", arr[2]);\r\n            this.engine.createTextureWithImage(\"grass\", arr[3]);\r\n            this.engine.createTextureWithImage(\"crate\", arr[4]);\r\n            this.engine.createTextureWithImage(\"banner\", arr[5]);\r\n            this.engine.createProgram2D(arr[6], arr[7], \"2d\");\r\n            this.engine.createProgram3D(arr[8], arr[9], \"3d\");\r\n            this.engine.loadModel(arr[10], \"knight\");\r\n            this.engine.loadModel(arr[11], \"crate\");\r\n            this.registerAdditionalModels();\r\n            this.engine.rootSceneNavigationController = new scene_navigation_controller_1.SceneNavigationController(new main_scene_controller_1.MainSceneController());\r\n            this.engine.start();\r\n        })\r\n            .catch(err => {\r\n            console.log(\"Error \" + err);\r\n        });\r\n    }\r\n    registerAdditionalModels() {\r\n        shared_geometry_1.SharedGeometry.Instance.registerModel(\"grass\", grass_1.GrassModel.createModel());\r\n    }\r\n}\r\nexports.App = App;\r\nexports.app = new App();\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app.ts\n// module id = 21\n// module chunks = 0","\"use strict\";\r\n/* Copyright 2017 William Hill.\r\n\nLicensed under the Apache License, Version 2.0 (the “License”);\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\n   http://www.apache.org/licenses/LICENSE-2.0\r\n\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an “AS IS” BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License. */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst scene_navigation_controller_1 = require(\"../engine/UI/scene.navigation.controller\");\r\nconst touch_1 = require(\"../engine/UI/touch\");\r\nconst texture_1 = require(\"./rendering/texture\");\r\nconst master_renderer_1 = require(\"./rendering/renderers/master.renderer\");\r\nconst shared_geometry_1 = require(\"./rendering/objects/shared.geometry\");\r\nconst cube_1 = require(\"./rendering/dummy/cube\");\r\nconst triangle_1 = require(\"./rendering/dummy/triangle\");\r\nconst shared_textures_1 = require(\"./rendering/shared.textures\");\r\nconst shading_program_2d_1 = require(\"./rendering/shaders/shading.program.2d\");\r\nconst shading_program_3d_1 = require(\"./rendering/shaders/shading.program.3d\");\r\nconst ogex_loader_1 = require(\"./loaders/ogex.loader\");\r\nconst ray_caster_1 = require(\"../engine/rendering/ray.caster\");\r\nconst point_1 = require(\"../engine/math/point\");\r\nclass Engine {\r\n    constructor() {\r\n        this.isSetup = false;\r\n        this.mouseLocation = point_1.Point.zero;\r\n        //Keycodes\r\n        this.KEY_A = 97;\r\n        this.KEY_D = 100;\r\n        this.KEY_Q = 113;\r\n        this.KEY_RIGHT = 39;\r\n        this.lastTimestamp = 0;\r\n        //\r\n        this.lastMouseX = 0;\r\n        this.lastMouseY = 0;\r\n    }\r\n    /// Setups the engine\r\n    setup() {\r\n        this.canvas = document.getElementById('webgl-canvas');\r\n        this.glContext = this.canvas.getContext(\"webgl\");\r\n        if (this.glContext == null) {\r\n            throw \"No WebGL support\";\r\n        }\r\n        shared_textures_1.SharedTextures.createInstance(this.glContext);\r\n        shared_geometry_1.SharedGeometry.createInstance(this.glContext);\r\n        shared_geometry_1.SharedGeometry.Instance.registerModel(\"cube\", new cube_1.CubeModel());\r\n        shared_geometry_1.SharedGeometry.Instance.registerModel(\"triangle\", new triangle_1.TriangleModel());\r\n        //register touches\r\n        this.canvas.onmousedown = (event) => {\r\n            this.onMouseClick(new touch_1.Touch(event.x, event.y));\r\n        };\r\n        window.onresize = () => {\r\n            this.resize(this.canvas);\r\n        };\r\n        window.onorientationchange = () => {\r\n            this.resize(this.canvas);\r\n        };\r\n        this.rootSceneNavigationController = new scene_navigation_controller_1.SceneNavigationController();\r\n        this.glContext.clearColor(125 / 255, 196 / 255, 240 / 255, 1);\r\n        this.isSetup = true;\r\n    }\r\n    onMouseClick(touch) {\r\n        let ratio = window.devicePixelRatio || 1;\r\n        let touchWithRatio = new touch_1.Touch(touch.x / ratio, touch.y / ratio);\r\n        let topSC = this.rootSceneNavigationController.topSceneController;\r\n        if (topSC == null)\r\n            return;\r\n        topSC.touchesBegan(touch);\r\n    }\r\n    start() {\r\n        if (!this.isSetup) {\r\n            throw \"Engine is not setup! Call setup!\";\r\n        }\r\n        // all models are loaded at this point setup buffers \r\n        shared_geometry_1.SharedGeometry.Instance.setupBuffers();\r\n        let topSceneCtr = this.rootSceneNavigationController.topSceneController;\r\n        this.masterRenderer = new master_renderer_1.MasterRenderer(this.glContext, this.shadingProgram2d, this.shadingProgram3d);\r\n        this.rayCaster = new ray_caster_1.RayCaster(topSceneCtr.scene.camera, this.canvas);\r\n        topSceneCtr.rayCaster = this.rayCaster;\r\n        topSceneCtr.sceneDidLoad();\r\n        this.resize(this.canvas); // resize canvas before rendering\r\n        requestAnimationFrame(this.update.bind(this));\r\n    }\r\n    update(timestamp) {\r\n        const dt = (timestamp - this.lastTimestamp) / 1000;\r\n        this.lastTimestamp = timestamp;\r\n        let topSC = this.rootSceneNavigationController.topSceneController;\r\n        topSC.scene.objects3D.forEach(o => o.update(dt));\r\n        if (topSC.scene.player != null) {\r\n            topSC.scene.player.update(dt);\r\n        }\r\n        topSC.scene.enemies.forEach(e => e.update(dt));\r\n        this.render();\r\n        requestAnimationFrame(this.update.bind(this));\r\n    }\r\n    render() {\r\n        this.glContext.clear(this.glContext.COLOR_BUFFER_BIT | this.glContext.DEPTH_BUFFER_BIT);\r\n        let topSC = this.rootSceneNavigationController.topSceneController;\r\n        // draw 2D sprites\r\n        if (topSC != null) {\r\n            topSC.update();\r\n            this.masterRenderer.render(topSC.scene);\r\n        }\r\n    }\r\n    createProgram2D(vertextShaderCode, fragmentShaderCode, programName) {\r\n        let shader = new shading_program_2d_1.ShadingProgram2d(this.glContext, vertextShaderCode, fragmentShaderCode);\r\n        this.shadingProgram2d = shader;\r\n    }\r\n    createProgram3D(vertextShaderCode, fragmentShaderCode, programName) {\r\n        let shader = new shading_program_3d_1.ShadingProgram3d(this.glContext, vertextShaderCode, fragmentShaderCode);\r\n        this.shadingProgram3d = shader;\r\n    }\r\n    createTextureWithImage(key, image) {\r\n        let texture = texture_1.Texture.createTextureFromImage(this.glContext, image);\r\n        shared_textures_1.SharedTextures.Instance.setTexture(key, texture);\r\n    }\r\n    loadModel(data, name) {\r\n        let model = new ogex_loader_1.OGexLoader().parse(data);\r\n        shared_geometry_1.SharedGeometry.Instance.registerModel(name, model);\r\n    }\r\n    resize(canvas) {\r\n        var cssToRealPixels = window.devicePixelRatio || 1;\r\n        // Lookup the size the browser is displaying the canvas in CSS pixels\r\n        // and compute a size needed to make our drawingbuffer match it in\r\n        // device pixels.\r\n        var displayWidth = Math.floor(canvas.clientWidth * cssToRealPixels);\r\n        var displayHeight = Math.floor(canvas.clientHeight * cssToRealPixels);\r\n        // Check if the canvas is not the same size.\r\n        if (canvas.width !== displayWidth ||\r\n            canvas.height !== displayHeight) {\r\n            // Make the canvas the same size\r\n            canvas.width = displayWidth;\r\n            canvas.height = displayHeight;\r\n        }\r\n        this.rootSceneNavigationController.topSceneController.scene.width = canvas.width / cssToRealPixels;\r\n        this.rootSceneNavigationController.topSceneController.scene.height = canvas.height / cssToRealPixels;\r\n        this.rootSceneNavigationController.sceneControllers.forEach(element => {\r\n            element.sceneDidResize();\r\n        });\r\n        this.masterRenderer.updatePixelRatio(cssToRealPixels);\r\n        this.masterRenderer.updateAspectRatio(canvas.width, canvas.height);\r\n        // Update the projection matrix in RayCaster\r\n        this.rayCaster.projectionMatrix = this.masterRenderer.projectionMatrix;\r\n    }\r\n}\r\nexports.Engine = Engine;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/engine/engine.ts\n// module id = 22\n// module chunks = 0","\"use strict\";\r\n/* Copyright 2017 William Hill.\r\n\nLicensed under the Apache License, Version 2.0 (the “License”);\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\n   http://www.apache.org/licenses/LICENSE-2.0\r\n\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an “AS IS” BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License. */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/// Class containing information about single touch.\r\nclass Touch {\r\n    constructor(x, y) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n}\r\nexports.Touch = Touch;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/engine/UI/touch.ts\n// module id = 23\n// module chunks = 0","\"use strict\";\r\n/* Copyright 2017 William Hill.\r\n\nLicensed under the Apache License, Version 2.0 (the “License”);\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\n   http://www.apache.org/licenses/LICENSE-2.0\r\n\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an “AS IS” BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License. */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/// Class responsible for handing texture data\r\nclass Texture {\r\n    constructor(textureId) {\r\n        this.textureId = textureId;\r\n    } // the address of the texture data\r\n    // Returns texture address\r\n    get address() {\r\n        return this.textureId;\r\n    }\r\n    static createTextureFromImage(glContext, image) {\r\n        var texture = glContext.createTexture(); // Create a texture\r\n        glContext.bindTexture(glContext.TEXTURE_2D, texture); // Bind the texture\r\n        // Set the parameters so we don't need mips and so we're not filtering\r\n        // and we don't repeat\r\n        glContext.texParameteri(glContext.TEXTURE_2D, glContext.TEXTURE_WRAP_S, glContext.CLAMP_TO_EDGE);\r\n        glContext.texParameteri(glContext.TEXTURE_2D, glContext.TEXTURE_WRAP_T, glContext.CLAMP_TO_EDGE);\r\n        glContext.texParameteri(glContext.TEXTURE_2D, glContext.TEXTURE_MIN_FILTER, glContext.NEAREST);\r\n        glContext.texParameteri(glContext.TEXTURE_2D, glContext.TEXTURE_MAG_FILTER, glContext.NEAREST);\r\n        // Upload the image into the texture.\r\n        var mipLevel = 0; // the largest mip\r\n        var internalFormat = glContext.RGBA; // format we want in the texture\r\n        var srcFormat = glContext.RGBA; // format of data we are supplying\r\n        var srcType = glContext.UNSIGNED_BYTE; // type of data we are supplying\r\n        glContext.texImage2D(glContext.TEXTURE_2D, mipLevel, internalFormat, srcFormat, srcType, image);\r\n        glContext.bindTexture(glContext.TEXTURE_2D, null); // Undbind the texture\r\n        return new Texture(texture);\r\n    }\r\n}\r\nexports.Texture = Texture;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/engine/rendering/texture.ts\n// module id = 24\n// module chunks = 0","\"use strict\";\r\n/* Copyright 2017 William Hill.\r\n\nLicensed under the Apache License, Version 2.0 (the “License”);\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\n   http://www.apache.org/licenses/LICENSE-2.0\r\n\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an “AS IS” BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License. */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst sprite_renderer_1 = require(\"./sprite.renderer\");\r\nconst object3d_renderer_1 = require(\"./object3d.renderer\");\r\n/// Class responsible for rendering \r\nclass MasterRenderer {\r\n    constructor(glContext, shadingProgram2d, shadingProgram3d) {\r\n        this.glContext = glContext;\r\n        this.shadingProgram2d = shadingProgram2d;\r\n        this.shadingProgram3d = shadingProgram3d;\r\n        this.spriteRenderer = new sprite_renderer_1.SpriteRenderer(shadingProgram2d, glContext);\r\n        this.object3dRender = new object3d_renderer_1.Object3dRenderer(shadingProgram3d, glContext);\r\n    }\r\n    updateAspectRatio(width, height) {\r\n        this.glContext.viewport(0, 0, width, height);\r\n        this.object3dRender.updateProjectionMatrix(width, height);\r\n    }\r\n    updatePixelRatio(ratio) {\r\n        this.spriteRenderer.updatePixelRatio(ratio);\r\n    }\r\n    get projectionMatrix() {\r\n        return this.object3dRender.projectionMatrix;\r\n    }\r\n    /// Renders the scene\r\n    render(scene) {\r\n        this.object3dRender.render(scene);\r\n        this.spriteRenderer.render(scene);\r\n    }\r\n}\r\nexports.MasterRenderer = MasterRenderer;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/engine/rendering/renderers/master.renderer.ts\n// module id = 25\n// module chunks = 0","\"use strict\";\r\n/* Copyright 2017 William Hill.\r\n\nLicensed under the Apache License, Version 2.0 (the “License”);\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\n   http://www.apache.org/licenses/LICENSE-2.0\r\n\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an “AS IS” BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License. */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst sprite_batch_1 = require(\"../sprite.batch\");\r\n/// Class responsible for rendering sprites\r\nclass SpriteRenderer {\r\n    constructor(shadingProgram, glContext) {\r\n        this.shadingProgram = shadingProgram;\r\n        this.glContext = glContext;\r\n        this.spriteBatch = new sprite_batch_1.SpriteBatch(shadingProgram, this.glContext);\r\n    }\r\n    updatePixelRatio(ratio) {\r\n        this.spriteBatch.updatePixelRatio(ratio);\r\n    }\r\n    /// Renders scene's sprites\r\n    render(scene) {\r\n        this.spriteBatch.begin();\r\n        scene.layers.forEach(layer => {\r\n            layer.sprites.forEach(item => {\r\n                this.spriteBatch.draw(item);\r\n            });\r\n        });\r\n        this.spriteBatch.flush();\r\n    }\r\n}\r\nexports.SpriteRenderer = SpriteRenderer;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/engine/rendering/renderers/sprite.renderer.ts\n// module id = 26\n// module chunks = 0","\"use strict\";\r\n/* Copyright 2017 William Hill.\r\n\nLicensed under the Apache License, Version 2.0 (the “License”);\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\n   http://www.apache.org/licenses/LICENSE-2.0\r\n\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an “AS IS” BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License. */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vector2_1 = require(\"../math/vector2\");\r\nconst vector2_array_1 = require(\"../structs/vector2.array\");\r\nconst shading_program_2d_1 = require(\"./shaders/shading.program.2d\");\r\nclass SpriteBatch {\r\n    constructor(shadingProgram, glContext) {\r\n        this.shadingProgram = shadingProgram;\r\n        this.glContext = glContext;\r\n        this.vertexCount = 0;\r\n        this.pixelRatio = 1;\r\n        this.vertexBuffer = glContext.createBuffer();\r\n        this.textureBuffer = glContext.createBuffer();\r\n        this.vertices = new vector2_array_1.Vector2Array([]);\r\n        this.textCoords = new vector2_array_1.Vector2Array([]);\r\n    }\r\n    /// Binds vertex buffer as current buffer\r\n    begin() {\r\n        this.currentTexture = null;\r\n        this.vertexCount = 0;\r\n        this.vertices.clear();\r\n        this.textCoords.clear();\r\n        // turn on depth testing\r\n        this.glContext.disable(this.glContext.DEPTH_TEST);\r\n        this.glContext.disable(this.glContext.CULL_FACE);\r\n    }\r\n    /// Adds a single sprite to draw batch\r\n    draw(sprite) {\r\n        if (this.currentTexture == null) {\r\n            this.currentTexture = sprite.texture;\r\n        }\r\n        // if different texture is used for rendering - flush the content on to the screen\r\n        if (this.currentTexture != sprite.texture) {\r\n            this.flush();\r\n            this.begin();\r\n        }\r\n        let f = sprite.frame;\r\n        let v1 = new vector2_1.Vector2(f.x * this.pixelRatio, f.y * this.pixelRatio);\r\n        let v2 = new vector2_1.Vector2(f.right * this.pixelRatio, f.y * this.pixelRatio);\r\n        let v3 = new vector2_1.Vector2(f.x * this.pixelRatio, f.bottom * this.pixelRatio);\r\n        let v4 = v2;\r\n        let v5 = new vector2_1.Vector2(f.right * this.pixelRatio, f.bottom * this.pixelRatio);\r\n        let v6 = v3;\r\n        this.vertices.push(v1);\r\n        this.vertices.push(v2);\r\n        this.vertices.push(v3);\r\n        this.vertices.push(v4);\r\n        this.vertices.push(v5);\r\n        this.vertices.push(v6);\r\n        let t1 = new vector2_1.Vector2(0, 0);\r\n        let t2 = new vector2_1.Vector2(1, 0);\r\n        let t3 = new vector2_1.Vector2(0, 1);\r\n        let t4 = t2;\r\n        let t5 = new vector2_1.Vector2(1, 1);\r\n        let t6 = t3;\r\n        this.textCoords.push(t1);\r\n        this.textCoords.push(t2);\r\n        this.textCoords.push(t3);\r\n        this.textCoords.push(t4);\r\n        this.textCoords.push(t5);\r\n        this.textCoords.push(t6);\r\n        this.vertexCount += 6;\r\n    }\r\n    /// Flushes the data to the GPU\r\n    flush() {\r\n        this.glContext.bindTexture(this.glContext.TEXTURE_2D, this.currentTexture.address);\r\n        // Set the program shader as current program\r\n        this.shadingProgram.useProgram();\r\n        // setup vertices\r\n        // set the shader attribute\r\n        let resolutionUniformLocation = this.shadingProgram.getLocation(shading_program_2d_1.ShadingProgram2dLocations.RESOLUTION);\r\n        // Pass in the canvas resolution so we can convert from\r\n        // pixels to clipspace in the shader\r\n        this.glContext.uniform2f(resolutionUniformLocation, this.glContext.canvas.width, this.glContext.canvas.height);\r\n        // Bind the current buffer\r\n        this.glContext.bindBuffer(this.glContext.ARRAY_BUFFER, this.vertexBuffer);\r\n        // Pass down the buffer data\r\n        this.glContext.bufferData(this.glContext.ARRAY_BUFFER, new Float32Array(this.vertices.data), this.glContext.STATIC_DRAW);\r\n        // Enable attribute location\r\n        let positionLocation = this.shadingProgram.getLocation(shading_program_2d_1.ShadingProgram2dLocations.POSITION);\r\n        this.glContext.enableVertexAttribArray(positionLocation);\r\n        // Tell the attribute how to get data out of positionBuffer (ARRAY_BUFFER)\r\n        var size = 2; // 2 components per iteration\r\n        var type = this.glContext.FLOAT; // the data is 32bit floats\r\n        var normalize = false; // don't normalize the data\r\n        var stride = 0; // 0 = move forward size * sizeof(type) each iteration to get the next position\r\n        var offset = 0; // start at the beginning of the buffer\r\n        this.glContext.vertexAttribPointer(positionLocation, size, type, normalize, stride, offset);\r\n        // Handle textures\r\n        let textureLocation = this.shadingProgram.getLocation(shading_program_2d_1.ShadingProgram2dLocations.TEXTURE_COORDINATES);\r\n        // Bind the texture buffer\r\n        this.glContext.bindBuffer(this.glContext.ARRAY_BUFFER, this.textureBuffer);\r\n        // Pass down the buffer data\r\n        this.glContext.bufferData(this.glContext.ARRAY_BUFFER, new Float32Array(this.textCoords.data), this.glContext.STATIC_DRAW);\r\n        this.glContext.enableVertexAttribArray(textureLocation);\r\n        this.glContext.vertexAttribPointer(textureLocation, size, type, normalize, stride, offset);\r\n        this.glContext.drawArrays(this.glContext.TRIANGLES, offset, this.vertexCount);\r\n        // disable attribute locations\r\n        this.glContext.disableVertexAttribArray(positionLocation);\r\n        this.glContext.disableVertexAttribArray(textureLocation);\r\n    }\r\n    updatePixelRatio(ratio) {\r\n        this.pixelRatio = ratio;\r\n    }\r\n}\r\nexports.SpriteBatch = SpriteBatch;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/engine/rendering/sprite.batch.ts\n// module id = 27\n// module chunks = 0","\"use strict\";\r\n/* Copyright 2017 William Hill.\r\n\nLicensed under the Apache License, Version 2.0 (the “License”);\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\n   http://www.apache.org/licenses/LICENSE-2.0\r\n\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an “AS IS” BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License. */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/// Class responsible for holding shader data\r\nclass Shader {\r\n    constructor(shaderId) {\r\n        this.shaderId = shaderId;\r\n    }\r\n    /// Creates shader from the given source\r\n    static createFromSource(glContext, source, type) {\r\n        // create shader object\r\n        let shader = glContext.createShader(type);\r\n        // Load the shader source\r\n        glContext.shaderSource(shader, source);\r\n        // Compile the shader\r\n        glContext.compileShader(shader);\r\n        // Check the compile status\r\n        var compiled = glContext.getShaderParameter(shader, glContext.COMPILE_STATUS);\r\n        if (!compiled) {\r\n            // Something went wrong during compilation; get the error\r\n            var lastError = glContext.getShaderInfoLog(shader);\r\n            glContext.deleteShader(shader);\r\n            console.log(lastError);\r\n            return null;\r\n        }\r\n        return new Shader(shader);\r\n    }\r\n}\r\nexports.Shader = Shader;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/engine/rendering/shaders/shader.ts\n// module id = 28\n// module chunks = 0","\"use strict\";\r\n/* Copyright 2017 William Hill.\r\n\nLicensed under the Apache License, Version 2.0 (the “License”);\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\n   http://www.apache.org/licenses/LICENSE-2.0\r\n\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an “AS IS” BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License. */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/// Class responsible for handling WebGL program.\r\nclass Program {\r\n    constructor(programId) {\r\n        this.programId = programId;\r\n    }\r\n    /// Creates WebGL program from the given shaders\r\n    static createProgram(glContext, vertexShader, fragmentShader) {\r\n        // Create empty program\r\n        let program = glContext.createProgram();\r\n        // Attach shaders to the program\r\n        glContext.attachShader(program, vertexShader.shaderId);\r\n        glContext.attachShader(program, fragmentShader.shaderId);\r\n        // Link program\r\n        glContext.linkProgram(program);\r\n        // Check the link status\r\n        let linked = glContext.getProgramParameter(program, glContext.LINK_STATUS);\r\n        if (!linked) {\r\n            // something went wrong with the link\r\n            var lastError = glContext.getProgramInfoLog(program);\r\n            console.log(\"Error in program linking:\" + lastError);\r\n            glContext.deleteProgram(program);\r\n            return null;\r\n        }\r\n        // Shaders are not needed any more - detach them \r\n        // Normally they should be detached but there is problem in Safari. For now, detachement is commented out\r\n        //glContext.detachShader(program, fragmentShader.shaderId);\r\n        //glContext.detachShader(program, vertexShader.shaderId);\r\n        return new Program(program);\r\n    }\r\n}\r\nexports.Program = Program;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/engine/rendering/shaders/program.ts\n// module id = 29\n// module chunks = 0","\"use strict\";\r\n/* Copyright 2017 William Hill.\r\n\nLicensed under the Apache License, Version 2.0 (the “License”);\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\n   http://www.apache.org/licenses/LICENSE-2.0\r\n\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an “AS IS” BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License. */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst shading_program_3d_1 = require(\"../shaders/shading.program.3d\");\r\nconst matrix_4x4_1 = require(\"../../math/matrix_4x4\");\r\nconst math_helper_1 = require(\"../../math/math.helper\");\r\n/// Class responsible for rendering 3d objects\r\nclass Object3dRenderer {\r\n    constructor(shadingProgram, glContext) {\r\n        this.shadingProgram = shadingProgram;\r\n        this.glContext = glContext;\r\n        this._projectionMatrix = [];\r\n        this._projectionMatrix = matrix_4x4_1.Matrix4x4.identity();\r\n        this.fieldOfViewRadians = math_helper_1.MathHelper.degToRad(60);\r\n    }\r\n    get projectionMatrix() {\r\n        return this._projectionMatrix;\r\n    }\r\n    updateProjectionMatrix(width, height) {\r\n        this._projectionMatrix = matrix_4x4_1.Matrix4x4.perspective(this.fieldOfViewRadians, width / height, 1, 2000);\r\n    }\r\n    render(scene) {\r\n        this.glContext.enable(this.glContext.DEPTH_TEST); // turn on depth testing\r\n        this.glContext.enable(this.glContext.CULL_FACE); // tell webgl to cull faces\r\n        this.shadingProgram.useProgram();\r\n        scene.objects3D.forEach(obj => {\r\n            let textureAddress = obj.texture.address;\r\n            this.glContext.bindTexture(this.glContext.TEXTURE_2D, textureAddress);\r\n            let model = obj.model;\r\n            let positionLocation = this.shadingProgram.getLocation(shading_program_3d_1.ShadingProgram3dLocations.POSITION);\r\n            let matrixLocation = this.shadingProgram.getLocation(shading_program_3d_1.ShadingProgram3dLocations.MATRIX);\r\n            let textureLocation = this.shadingProgram.getLocation(shading_program_3d_1.ShadingProgram3dLocations.TEXTURE);\r\n            this.glContext.bindBuffer(this.glContext.ELEMENT_ARRAY_BUFFER, model.modelBufferInfo.indiciesBufferInfo.glBuffer);\r\n            // Tell WebGL how to pull out the positions from the position\r\n            // buffer into the vertexPosition attribute \r\n            let vertsOffset = model.modelBufferInfo.verticesBufferInfo.offset;\r\n            this.glContext.bindBuffer(this.glContext.ARRAY_BUFFER, model.modelBufferInfo.verticesBufferInfo.glBuffer);\r\n            this.glContext.vertexAttribPointer(positionLocation, 3, this.glContext.FLOAT, false, 0, vertsOffset * 4); // * 4 - is the size of float\r\n            this.glContext.enableVertexAttribArray(positionLocation);\r\n            // Texture\r\n            let textOffset = model.modelBufferInfo.textureBufferInfo.offset;\r\n            this.glContext.bindBuffer(this.glContext.ARRAY_BUFFER, model.modelBufferInfo.textureBufferInfo.glBuffer);\r\n            this.glContext.vertexAttribPointer(textureLocation, 2, this.glContext.FLOAT, false, 0, textOffset * 4); // * 4 - is the size of float\r\n            this.glContext.enableVertexAttribArray(textureLocation);\r\n            let viewMatrix = scene.camera.viewMatrix;\r\n            var MVP = matrix_4x4_1.Matrix4x4.multiply(this._projectionMatrix, viewMatrix);\r\n            let pos = obj.position;\r\n            MVP = matrix_4x4_1.Matrix4x4.translate(MVP, pos.x, pos.y, pos.z);\r\n            MVP = matrix_4x4_1.Matrix4x4.xRotate(MVP, math_helper_1.MathHelper.degToRad(obj.rotation.x));\r\n            MVP = matrix_4x4_1.Matrix4x4.yRotate(MVP, math_helper_1.MathHelper.degToRad(obj.rotation.y));\r\n            MVP = matrix_4x4_1.Matrix4x4.zRotate(MVP, math_helper_1.MathHelper.degToRad(obj.rotation.z));\r\n            let scale = obj.scale;\r\n            MVP = matrix_4x4_1.Matrix4x4.scale(MVP, scale.x, scale.y, scale.z);\r\n            // Compute a view projection matrix\r\n            this.glContext.uniformMatrix4fv(matrixLocation, false, MVP);\r\n            // Draw the geometry.\r\n            let primitiveType = this.glContext.TRIANGLES;\r\n            let offset = model.modelBufferInfo.indiciesBufferInfo.offset;\r\n            let vertexCount = model.indicesCount;\r\n            let type = this.glContext.UNSIGNED_SHORT;\r\n            this.glContext.drawElements(this.glContext.TRIANGLES, vertexCount, type, offset * 2); // * 2 - is size of unsigned short\r\n        });\r\n    }\r\n}\r\nexports.Object3dRenderer = Object3dRenderer;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/engine/rendering/renderers/object3d.renderer.ts\n// module id = 30\n// module chunks = 0","\"use strict\";\r\n/* Copyright 2017 William Hill.\r\n\nLicensed under the Apache License, Version 2.0 (the “License”);\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\n   http://www.apache.org/licenses/LICENSE-2.0\r\n\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an “AS IS” BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License. */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vector3_array_1 = require(\"../../structs/vector3.array\");\r\nconst vector2_array_1 = require(\"../../structs/vector2.array\");\r\nconst object3d_1 = require(\"../objects/object3d\");\r\nconst model_1 = require(\"../objects/model\");\r\nconst shared_geometry_1 = require(\"../../rendering/objects/shared.geometry\");\r\nconst shared_textures_1 = require(\"../../rendering/shared.textures\");\r\nclass Cube extends object3d_1.Object3D {\r\n    onInit() {\r\n        this.model = shared_geometry_1.SharedGeometry.Instance.modelForName(\"cube\");\r\n        this.texture = shared_textures_1.SharedTextures.Instance.getTexture(\"fx\");\r\n    }\r\n}\r\nexports.Cube = Cube;\r\nclass CubeModel extends model_1.Model {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.vertices = new vector3_array_1.Vector3Array([\r\n            // Front face\r\n            -1.0, -1.0, 1.0,\r\n            1.0, -1.0, 1.0,\r\n            1.0, 1.0, 1.0,\r\n            -1.0, 1.0, 1.0,\r\n            // Back face\r\n            -1.0, -1.0, -1.0,\r\n            -1.0, 1.0, -1.0,\r\n            1.0, 1.0, -1.0,\r\n            1.0, -1.0, -1.0,\r\n            // // Top face\r\n            -1.0, 1.0, -1.0,\r\n            -1.0, 1.0, 1.0,\r\n            1.0, 1.0, 1.0,\r\n            1.0, 1.0, -1.0,\r\n            // // Bottom face\r\n            -1.0, -1.0, -1.0,\r\n            1.0, -1.0, -1.0,\r\n            1.0, -1.0, 1.0,\r\n            -1.0, -1.0, 1.0,\r\n            // // Right face\r\n            1.0, -1.0, -1.0,\r\n            1.0, 1.0, -1.0,\r\n            1.0, 1.0, 1.0,\r\n            1.0, -1.0, 1.0,\r\n            // // Left face\r\n            -1.0, -1.0, -1.0,\r\n            -1.0, -1.0, 1.0,\r\n            -1.0, 1.0, 1.0,\r\n            -1.0, 1.0, -1.0,\r\n        ]);\r\n        this.indices = new vector3_array_1.Vector3Array([\r\n            0, 1, 2, 0, 2, 3,\r\n            4, 5, 6, 4, 6, 7,\r\n            8, 9, 10, 8, 10, 11,\r\n            12, 13, 14, 12, 14, 15,\r\n            16, 17, 18, 16, 18, 19,\r\n            20, 21, 22, 20, 22, 23 // left\r\n        ]);\r\n        this.textureCoordinates = new vector2_array_1.Vector2Array([\r\n            // Front\r\n            0.0, 0.0,\r\n            1.0, 0.0,\r\n            1.0, 1.0,\r\n            0.0, 1.0,\r\n            // Back\r\n            0.0, 0.0,\r\n            1.0, 0.0,\r\n            1.0, 1.0,\r\n            0.0, 1.0,\r\n            // Top\r\n            0.0, 0.0,\r\n            1.0, 0.0,\r\n            1.0, 1.0,\r\n            0.0, 1.0,\r\n            // Bottom\r\n            0.0, 0.0,\r\n            1.0, 0.0,\r\n            1.0, 1.0,\r\n            0.0, 1.0,\r\n            // Right\r\n            0.0, 0.0,\r\n            1.0, 0.0,\r\n            1.0, 1.0,\r\n            0.0, 1.0,\r\n            // Left\r\n            0.0, 0.0,\r\n            1.0, 0.0,\r\n            1.0, 1.0,\r\n            0.0, 1.0,\r\n        ]);\r\n    }\r\n}\r\nexports.CubeModel = CubeModel;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/engine/rendering/dummy/cube.ts\n// module id = 31\n// module chunks = 0","\"use strict\";\r\n/* Copyright 2017 William Hill.\r\n\nLicensed under the Apache License, Version 2.0 (the “License”);\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\n   http://www.apache.org/licenses/LICENSE-2.0\r\n\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an “AS IS” BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License. */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vector3_1 = require(\"../math/vector3\");\r\nconst vector2_1 = require(\"../math/vector2\");\r\nconst point_1 = require(\"../math/point\");\r\nclass Physics {\r\n    static rectOverlap(r1, r2) {\r\n        if (Math.max(r1.x, r1.x + r1.width) < Math.min(r2.x, r2.x + r2.width))\r\n            return false;\r\n        if (Math.min(r1.x, r1.x + r1.width) > Math.max(r2.x, r2.x + r2.width))\r\n            return false;\r\n        if (Math.max(r1.y, r1.y + r1.height) < Math.min(r2.y, r2.y + r2.height))\r\n            return false;\r\n        if (Math.min(r1.y, r1.y + r1.height) > Math.max(r2.y, r2.y + r2.height))\r\n            return false;\r\n        return true;\r\n    }\r\n    static checkForCollisions(current, objects) {\r\n        if (!current.collider) {\r\n            return false;\r\n        }\r\n        let isColliding = false;\r\n        let colliderRect = current.collider.rect;\r\n        let boundingBox = colliderRect.transformAroundPoint(new point_1.Point(current.position.x, current.position.z));\r\n        objects.forEach(element => {\r\n            if (current != element && element.collider != null) {\r\n                let otherCollidingRect = element.collider.rect;\r\n                let otherBox = colliderRect.transformAroundPoint(new point_1.Point(element.position.x, element.position.z));\r\n                if (Physics.rectOverlap(boundingBox, otherBox)) {\r\n                    isColliding = true;\r\n                }\r\n            }\r\n        });\r\n        // const mid1 = (current.collider as BoxCollider).rect.middle;\r\n        // const coll1 = current.collider as BoxCollider;\r\n        // const gridPoint1 = this.worldPointToGridPoint(current.localToWorld(this.gridPointToWorldPoint(mid1)));\r\n        // const rc1 = Rectangle.fromMiddlePoint(gridPoint1,coll1.rect.size );\r\n        // objects.forEach(other => {\r\n        //     if(other !== current && other.collider && other.collider instanceof BoxCollider) {\r\n        //         if(other instanceof Cube) {\r\n        //             const coll2 = other.collider as BoxCollider;\r\n        //             const mid2 = coll2.rect.middle;\r\n        //             const gridPoint2 = this.worldPointToGridPoint(other.localToWorld(this.gridPointToWorldPoint(mid2)));\r\n        //             const rc2 = Rectangle.fromMiddlePoint(gridPoint2, coll2.rect.size);\r\n        //             if (Physics.rectOverlap(rc1, rc2)) {\r\n        //                 isColliding = true;\r\n        //             }\r\n        //         }\r\n        //     }\r\n        // });\r\n        return isColliding;\r\n    }\r\n    static worldPointToGridPoint(pt) {\r\n        return new vector2_1.Vector2(pt.x, pt.z);\r\n    }\r\n    static gridPointToWorldPoint(pt) {\r\n        return new vector3_1.Vector3(pt.x, 0, pt.y);\r\n    }\r\n}\r\nexports.Physics = Physics;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/engine/physics/physics.ts\n// module id = 32\n// module chunks = 0","\"use strict\";\r\n/* Copyright 2017 William Hill.\r\n\nLicensed under the Apache License, Version 2.0 (the “License”);\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\n   http://www.apache.org/licenses/LICENSE-2.0\r\n\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an “AS IS” BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License. */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass ModelBufferInfo {\r\n    constructor() {\r\n        this.verticesBufferInfo = new BufferDataInfo();\r\n        this.indiciesBufferInfo = new BufferDataInfo();\r\n        this.textureBufferInfo = new BufferDataInfo();\r\n    }\r\n}\r\nexports.ModelBufferInfo = ModelBufferInfo;\r\nclass BufferDataInfo {\r\n}\r\nexports.BufferDataInfo = BufferDataInfo;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/engine/rendering/objects/model.buffer.info.ts\n// module id = 33\n// module chunks = 0","\"use strict\";\r\n/* Copyright 2017 William Hill.\r\n\nLicensed under the Apache License, Version 2.0 (the “License”);\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\n   http://www.apache.org/licenses/LICENSE-2.0\r\n\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an “AS IS” BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License. */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vector2_array_1 = require(\"../../structs/vector2.array\");\r\nconst vector3_array_1 = require(\"../../structs/vector3.array\");\r\nconst model_1 = require(\"../objects/model\");\r\nconst object3d_1 = require(\"../objects/object3d\");\r\nconst shared_geometry_1 = require(\"../../rendering/objects/shared.geometry\");\r\nconst shared_textures_1 = require(\"../../rendering/shared.textures\");\r\nclass Triangle extends object3d_1.Object3D {\r\n    onInit() {\r\n        this.model = shared_geometry_1.SharedGeometry.Instance.modelForName(\"triangle\");\r\n        this.texture = shared_textures_1.SharedTextures.Instance.getTexture(\"fx\");\r\n    }\r\n}\r\nexports.Triangle = Triangle;\r\nclass TriangleModel extends model_1.Model {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.vertices = new vector3_array_1.Vector3Array([\r\n            -0.5, 0.5, 0.0,\r\n            -0.5, -0.5, 0.0,\r\n            0.5, -0.5, 0.0\r\n        ]);\r\n        this.indices = new vector3_array_1.Vector3Array([\r\n            0, 1, 2\r\n        ]);\r\n        this.textureCoordinates = new vector2_array_1.Vector2Array([\r\n            0.0, 0.0, 1.0, 0.0, 0.0, 1.0\r\n        ]);\r\n    }\r\n}\r\nexports.TriangleModel = TriangleModel;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/engine/rendering/dummy/triangle.ts\n// module id = 34\n// module chunks = 0","\"use strict\";\r\n/* Copyright 2017 William Hill.\r\n\nLicensed under the Apache License, Version 2.0 (the “License”);\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\n   http://www.apache.org/licenses/LICENSE-2.0\r\n\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an “AS IS” BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License. */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst model_1 = require(\"../rendering/objects/model\");\r\nconst vector3_array_1 = require(\"../structs/vector3.array\");\r\nconst vector2_array_1 = require(\"../structs/vector2.array\");\r\nclass OGexLoader {\r\n    constructor() {\r\n        this.iterator = 0;\r\n    }\r\n    parse(data) {\r\n        while (this.iterator < data.length) {\r\n            var nextToken = this.readNextToken(data);\r\n            switch (nextToken) {\r\n                case OGexLoader.METRIC_TOKEN:\r\n                    let metric = this.readMetricData(data);\r\n                    break;\r\n                case OGexLoader.GEOMETRY_OBJECT_DATA_TOKEN:\r\n                    return this.readGeometryData(data);\r\n                default:\r\n                    this.iterator += 1;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    readMetricData(data) {\r\n        var proprety = this.readProperty(data);\r\n        var value = this.readValue(data);\r\n        return new Metric(proprety, value);\r\n    }\r\n    readGeometryData(data) {\r\n        let model = new model_1.Model();\r\n        let name = this.readNameReference(data);\r\n        var numberOfOpeningBrackets = 0;\r\n        var numberOfClosingBrackets = 0;\r\n        var nextToken = this.readNextToken(data);\r\n        // move to opening bracket\r\n        while (nextToken != OGexLoader.OPENING_BRACKET) {\r\n            nextToken = this.readNextToken(data);\r\n        }\r\n        //read all the data\r\n        while (this.iterator < data.length) {\r\n            var next_token = this.readNextToken(data);\r\n            switch (next_token) {\r\n                case OGexLoader.OPENING_BRACKET:\r\n                    numberOfOpeningBrackets += 1;\r\n                    break;\r\n                case OGexLoader.CLOSING_BRACKET:\r\n                    numberOfClosingBrackets += 1;\r\n                    break;\r\n                case OGexLoader.MESH_TOKEN:\r\n                    let p1 = this.readProperty(data);\r\n                    break;\r\n                case OGexLoader.VERTEX_TOKEN:\r\n                    let prop = this.readProperty(data);\r\n                    let vData = this.readVertexData(data);\r\n                    switch (prop.value) {\r\n                        case \"position\":\r\n                            model.vertices = vData;\r\n                            break;\r\n                        case \"normal\":\r\n                            model.normals = vData;\r\n                            break;\r\n                        case \"color\":\r\n                            model.colors = vData;\r\n                            break;\r\n                        case \"texcoord\":\r\n                            model.textureCoordinates = vData;\r\n                            break;\r\n                    }\r\n                    break;\r\n                case OGexLoader.INDEX_ARRAY_TOKEN:\r\n                    model.indices = this.readVertexData(data);\r\n                    break;\r\n            }\r\n            this.iterator += 1;\r\n        }\r\n        return model;\r\n    }\r\n    readVertexData(data) {\r\n        var numberOfOpeningTags = 0;\r\n        var numberOfClosingTags = 0;\r\n        var vertextComponents = 0;\r\n        var tempChar = \"\";\r\n        var buffer = \"\";\r\n        // read number of components\r\n        // 1. find opening square bracket\r\n        while (data[this.iterator] != OGexLoader.OPENING_SQUARE_BRACKET) {\r\n            this.iterator += 1;\r\n        }\r\n        this.iterator += 1; // move to real value\r\n        // 2. read the data inside square brackets\r\n        while (data[this.iterator] != OGexLoader.CLOSING_SQUARE_BRACKET) {\r\n            buffer += data[this.iterator];\r\n            this.iterator += 1;\r\n        }\r\n        vertextComponents = Number(buffer);\r\n        // read data\r\n        numberOfOpeningTags = 0; // system aleardy loaded first bracket of the data. The second one is to inform that all data has been loaded\r\n        numberOfClosingTags = 0;\r\n        var dataArray = [];\r\n        while (!(numberOfOpeningTags > 0 && (numberOfOpeningTags == numberOfClosingTags))) {\r\n            let t = this.readNextToken(data);\r\n            switch (t) {\r\n                case OGexLoader.OPENING_BRACKET:\r\n                    numberOfOpeningTags += 1;\r\n                    break;\r\n                case OGexLoader.CLOSING_BRACKET:\r\n                    numberOfClosingTags += 1;\r\n                    break;\r\n                default:\r\n                    if (numberOfOpeningTags >= 2) {\r\n                        dataArray.push(Number(t));\r\n                    }\r\n            }\r\n        }\r\n        if (vertextComponents == 2) {\r\n            return new vector2_array_1.Vector2Array(dataArray);\r\n        }\r\n        else if (vertextComponents == 3) {\r\n            return new vector3_array_1.Vector3Array(dataArray);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    readNameReference(data) {\r\n        let token = this.readNextToken(data);\r\n        return token.substring(1, token.length);\r\n    }\r\n    readNextToken(data) {\r\n        var buffer = \"\";\r\n        var tempChar = \"\";\r\n        while (this.iterator < data.length) {\r\n            tempChar = data[this.iterator];\r\n            if ((tempChar == OGexLoader.OPENING_BRACKET ||\r\n                tempChar == OGexLoader.CLOSING_BRACKET) && buffer.length == 0) {\r\n                this.iterator += 1;\r\n                return tempChar;\r\n            }\r\n            switch (tempChar) {\r\n                case OGexLoader.SLASH: break;\r\n                case OGexLoader.OPENING_PARENTESIS:\r\n                case OGexLoader.CLOSING_PARENTESIS:\r\n                case OGexLoader.OPENING_BRACKET:\r\n                case OGexLoader.CLOSING_BRACKET:\r\n                case OGexLoader.EMPTY_SPACE:\r\n                case OGexLoader.TABS:\r\n                case OGexLoader.COMMA:\r\n                case OGexLoader.LINE_END:\r\n                    var trimmedBuffer = buffer.trim();\r\n                    if (trimmedBuffer.length > 0) {\r\n                        trimmedBuffer = trimmedBuffer.replace(/['\"]+/g, '');\r\n                        return trimmedBuffer;\r\n                    }\r\n                    break;\r\n                default:\r\n                    buffer += tempChar;\r\n            }\r\n            this.iterator += 1;\r\n        }\r\n    }\r\n    // read value between parentesis\r\n    readProperty(data) {\r\n        let key = this.readNextToken(data);\r\n        let equalSign = this.readNextToken(data);\r\n        let value = this.readNextToken(data);\r\n        return new Property(key, value);\r\n    }\r\n    readValue(data) {\r\n        var numberOfOpeningTags = 0;\r\n        var numberOfClosingTags = 0;\r\n        var buffer = \"\";\r\n        var value = new Value();\r\n        while (!(numberOfOpeningTags > 0 && (numberOfOpeningTags == numberOfClosingTags))) {\r\n            let tempChar = data[this.iterator];\r\n            switch (tempChar) {\r\n                case OGexLoader.OPENING_BRACKET:\r\n                case OGexLoader.CLOSING_BRACKET:\r\n                    if (buffer.length > 0) {\r\n                        if (value.type == null) {\r\n                            value.type = buffer.trim();\r\n                            buffer = \"\";\r\n                        }\r\n                        else {\r\n                            if (buffer.indexOf(OGexLoader.QUOTE_SIGN) !== -1) {\r\n                                value.stringData = buffer;\r\n                            }\r\n                            else {\r\n                                value.arrayData = buffer.split(\",\").map(Number);\r\n                            }\r\n                            buffer = \"\";\r\n                        }\r\n                    }\r\n                    break;\r\n                case OGexLoader.EMPTY_SPACE:\r\n                    break;\r\n                default:\r\n                    buffer += tempChar;\r\n            }\r\n            switch (tempChar) {\r\n                case OGexLoader.OPENING_BRACKET:\r\n                    numberOfOpeningTags += 1;\r\n                    break;\r\n                case OGexLoader.CLOSING_BRACKET:\r\n                    numberOfClosingTags += 1;\r\n                    break;\r\n            }\r\n            this.iterator += 1;\r\n        }\r\n        return value;\r\n    }\r\n}\r\nOGexLoader.METRIC_TOKEN = \"Metric\";\r\nOGexLoader.OPENING_PARENTESIS = \"(\";\r\nOGexLoader.CLOSING_PARENTESIS = \")\";\r\nOGexLoader.OPENING_BRACKET = \"{\";\r\nOGexLoader.CLOSING_BRACKET = \"}\";\r\nOGexLoader.CLOSING_SQUARE_BRACKET = \"]\";\r\nOGexLoader.OPENING_SQUARE_BRACKET = \"[\";\r\nOGexLoader.EMPTY_SPACE = \" \";\r\nOGexLoader.EQUAL_SIGN = \"=\";\r\nOGexLoader.QUOTE_SIGN = \"\\\"\";\r\nOGexLoader.LINE_END = \"\\n\";\r\nOGexLoader.SLASH = \"/\";\r\nOGexLoader.TABS = \"\\t\";\r\nOGexLoader.COMMA = \",\";\r\nOGexLoader.FLOAT_DATA_TYPE = \"float\";\r\nOGexLoader.NODE_DATA_TOKEN = \"Node\";\r\nOGexLoader.GEOMETRY_OBJECT_DATA_TOKEN = \"GeometryObject\";\r\nOGexLoader.INDEX_ARRAY_TOKEN = \"IndexArray\";\r\nOGexLoader.MESH_TOKEN = \"Mesh\";\r\nOGexLoader.VERTEX_TOKEN = \"VertexArray\";\r\nexports.OGexLoader = OGexLoader;\r\nclass Property {\r\n    constructor(key, value) {\r\n        this.key = key;\r\n        this.value = value;\r\n    }\r\n    print() {\r\n        console.log(\"=========================================================\");\r\n        console.log(\"Property: \");\r\n        console.log(\"Key \" + this.key);\r\n        console.log(\"Value \" + this.value);\r\n        console.log(\"=========================================================\");\r\n    }\r\n}\r\nclass Metric {\r\n    constructor(property, value) {\r\n        this.property = property;\r\n        this.value = value;\r\n    }\r\n    print() {\r\n        console.log(\"=========================================================\");\r\n        console.log(\"Metric: \");\r\n        console.log(\"Property \" + this.property.key + \" \" + this.property.value);\r\n        console.log(\"Array value \" + this.value.type + \" \" + this.value.arrayData);\r\n        console.log(\"String data \" + this.value.stringData);\r\n        console.log(\"=========================================================\");\r\n    }\r\n}\r\nclass Value {\r\n}\r\nexports.Value = Value;\r\nclass VertexArray {\r\n    constructor(primitive) {\r\n        this.primitive = primitive;\r\n    }\r\n}\r\nexports.VertexArray = VertexArray;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/engine/loaders/ogex.loader.ts\n// module id = 35\n// module chunks = 0","\"use strict\";\r\n/* Copyright 2017 William Hill.\r\n\nLicensed under the Apache License, Version 2.0 (the “License”);\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\n   http://www.apache.org/licenses/LICENSE-2.0\r\n\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an “AS IS” BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License. */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vector3_1 = require(\"../math/vector3\");\r\nconst vector2_1 = require(\"../math/vector2\");\r\nconst matrix_4x4_1 = require(\"../math/matrix_4x4\");\r\nconst point_1 = require(\"../math/point\");\r\nclass Ray {\r\n    constructor(point = vector3_1.Vector3.zero, direction = vector3_1.Vector3.zero) {\r\n        this.point = point;\r\n        this.direction = direction;\r\n    }\r\n}\r\nexports.Ray = Ray;\r\nclass RayCaster {\r\n    constructor(camera, canvas) {\r\n        this.camera = camera;\r\n        this.canvas = canvas;\r\n        this.viewMatrix = [];\r\n        this.projectionMatrix = matrix_4x4_1.Matrix4x4.identity();\r\n    }\r\n    currentRay(point) {\r\n        let ratio = window.devicePixelRatio || 1;\r\n        let scaledPoint = new point_1.Point(point.x * ratio, point.y * ratio);\r\n        let directionVector = this.calculateMouseDirection(scaledPoint);\r\n        return new Ray(this.camera.position, directionVector);\r\n    }\r\n    getNormalizedDeviceCoords(point) {\r\n        let x = (2 * point.x) / this.canvas.width - 1;\r\n        let y = 1.0 - (2 * point.y) / this.canvas.height;\r\n        return new vector2_1.Vector2(x, y);\r\n    }\r\n    toEyeCoords(clippingCoords) {\r\n        let invertedProjectionMatrix = matrix_4x4_1.Matrix4x4.inverse(this.projectionMatrix);\r\n        let eyeCoords = matrix_4x4_1.Matrix4x4.multiply(invertedProjectionMatrix, clippingCoords);\r\n        return [eyeCoords[0], eyeCoords[1], -1.0, 0.0];\r\n    }\r\n    toWorldCoords(eyeCoords) {\r\n        let invertedView = matrix_4x4_1.Matrix4x4.inverse(this.viewMatrix);\r\n        let rayWorld = matrix_4x4_1.Matrix4x4.multiply(invertedView, eyeCoords);\r\n        let mouseRay = new vector3_1.Vector3(rayWorld[0], rayWorld[1], rayWorld[2]);\r\n        return vector3_1.Vector3.normalize(mouseRay);\r\n    }\r\n    calculateMouseDirection(point) {\r\n        // Get view matrix from camera\r\n        this.viewMatrix = this.camera.viewMatrix;\r\n        let mouseCoords = this.getNormalizedDeviceCoords(point);\r\n        let clippingCoords = [mouseCoords.x, mouseCoords.y, -1.0, 1.0];\r\n        let eyeCoords = this.toEyeCoords(clippingCoords);\r\n        let worldRay = this.toWorldCoords(eyeCoords);\r\n        return worldRay;\r\n    }\r\n}\r\nexports.RayCaster = RayCaster;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/engine/rendering/ray.caster.ts\n// module id = 36\n// module chunks = 0","\"use strict\";\r\n/* Copyright 2017 William Hill.\r\n\nLicensed under the Apache License, Version 2.0 (the “License”);\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\n   http://www.apache.org/licenses/LICENSE-2.0\r\n\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an “AS IS” BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License. */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst scene_controller_1 = require(\"../engine/UI/scene.controller\");\r\nconst game_scene_controller_1 = require(\"./game.scene.controller\");\r\nconst layer_1 = require(\"../engine/UI/layer\");\r\nconst rectangle_1 = require(\"../engine/rendering/rectangle\");\r\nconst button_1 = require(\"./UI/button\");\r\nclass MainSceneController extends scene_controller_1.SceneController {\r\n    sceneDidLoad() {\r\n        super.sceneDidLoad();\r\n        let layer = new layer_1.Layer();\r\n        this.scene.addLayer(layer);\r\n        this.playButton = new button_1.Button(rectangle_1.Rectangle.zero);\r\n        this.playButton.tapAction = () => {\r\n            this.sceneNavigationController.pushSceneController(new game_scene_controller_1.GameSceneController());\r\n        };\r\n        layer.addSprite(this.playButton);\r\n    }\r\n    sceneDidResize() {\r\n        let w = this.scene.width;\r\n        let h = this.scene.height;\r\n        let buttonWidth = 200;\r\n        let buttonHeight = 100;\r\n        let buttonPosX = (w - buttonWidth) / 2.0;\r\n        let buttonPosY = (h - buttonHeight) / 2.0;\r\n        this.playButton.frame = new rectangle_1.Rectangle(buttonPosX, buttonPosY, buttonWidth, buttonHeight);\r\n    }\r\n}\r\nexports.MainSceneController = MainSceneController;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/game/main.scene.controller.ts\n// module id = 37\n// module chunks = 0","\"use strict\";\r\n/* Copyright 2017 William Hill.\r\n\nLicensed under the Apache License, Version 2.0 (the “License”);\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\n   http://www.apache.org/licenses/LICENSE-2.0\r\n\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an “AS IS” BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License. */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vector3_1 = require(\"../math/vector3\");\r\nconst camera_1 = require(\"../rendering/camera\");\r\n/// Class responsible for managing objects and layers within single logical container\r\nclass Scene {\r\n    constructor() {\r\n        this._layers = []; // All layer that were added to the scene\r\n        this._objects3D = []; // All 3d objects placed in the scene\r\n        this._enemies = [];\r\n        let pos = new vector3_1.Vector3(15, 20, 15);\r\n        let up = new vector3_1.Vector3(0, 1, 0);\r\n        let target = new vector3_1.Vector3(0, 0, 0);\r\n        this.camera = new camera_1.Camera(pos, target, up);\r\n    }\r\n    /// Returns all layers added to this scene\r\n    get layers() {\r\n        return this._layers;\r\n    }\r\n    /// Returns all 3d objects added to this scene\r\n    get objects3D() {\r\n        return this._objects3D;\r\n    }\r\n    get enemies() {\r\n        return this._enemies;\r\n    }\r\n    get player() {\r\n        return this._player;\r\n    }\r\n    /// Adds new layer to the scene\r\n    addLayer(layer) {\r\n        this._layers.push(layer);\r\n    }\r\n    /// Add 3d object to the scene\r\n    addObject3D(object) {\r\n        object.scene = this;\r\n        this._objects3D.push(object);\r\n    }\r\n    setPlayer(player) {\r\n        this.addObject3D(player.sceneObject);\r\n        this._player = player;\r\n    }\r\n    addEnemy(enemy) {\r\n        this.addObject3D(enemy.sceneObject);\r\n        this._enemies.push(enemy);\r\n    }\r\n}\r\nexports.Scene = Scene;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/engine/UI/scene.ts\n// module id = 38\n// module chunks = 0","\"use strict\";\r\n/* Copyright 2017 William Hill.\r\n\nLicensed under the Apache License, Version 2.0 (the “License”);\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\n   http://www.apache.org/licenses/LICENSE-2.0\r\n\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an “AS IS” BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License. */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vector3_1 = require(\"../math/vector3\");\r\nconst matrix_4x4_1 = require(\"../math/matrix_4x4\");\r\nconst math_helper_1 = require(\"../math/math.helper\");\r\n/// Camera\r\nclass Camera {\r\n    constructor(position, target, up) {\r\n        this.cameraPitch = 20;\r\n        this.cameraAroundPointAngle = 0;\r\n        this.cameraDistanceToPoint = 20;\r\n        this._position = vector3_1.Vector3.zero;\r\n        this._target = vector3_1.Vector3.zero;\r\n        this._up = vector3_1.Vector3.zero;\r\n        this._position = position;\r\n        this._target = target;\r\n        this._up = up;\r\n    }\r\n    set position(value) {\r\n        this._position = value;\r\n    }\r\n    get position() {\r\n        return new vector3_1.Vector3(this._position.x, this._position.y, this._position.z);\r\n    }\r\n    set target(value) {\r\n        this._target = value;\r\n    }\r\n    get target() {\r\n        return new vector3_1.Vector3(this._target.x, this._target.y, this._target.z);\r\n    }\r\n    updateRotation(offsetX, offsetY) {\r\n        this.cameraPitch += offsetY;\r\n        console.log(\"Pitch \" + this.cameraPitch);\r\n        if (this.cameraPitch >= 90) {\r\n            this.cameraPitch = 90;\r\n        }\r\n        if (this.cameraPitch <= -90) {\r\n            this.cameraPitch = -90;\r\n        }\r\n        this.cameraAroundPointAngle += offsetX;\r\n        this.position.y = this.calculateVerticalDistance();\r\n        let horizontalDistance = this.calculateHorizontalDistance();\r\n        let newX = horizontalDistance * Math.cos(math_helper_1.MathHelper.degToRad(this.cameraAroundPointAngle));\r\n        let newZ = horizontalDistance * Math.sin(math_helper_1.MathHelper.degToRad(this.cameraAroundPointAngle));\r\n        this.position.x = newX;\r\n        this.position.z = newZ;\r\n        console.log(\"x \" + newX + \" z \" + newZ);\r\n    }\r\n    calculateHorizontalDistance() {\r\n        return this.cameraDistanceToPoint * Math.cos(math_helper_1.MathHelper.degToRad(this.cameraPitch));\r\n    }\r\n    calculateVerticalDistance() {\r\n        return this.cameraDistanceToPoint * Math.sin(math_helper_1.MathHelper.degToRad(this.cameraPitch));\r\n    }\r\n    get viewMatrix() {\r\n        // Compute the camera's matrix using look at.\r\n        var cameraMatrix = matrix_4x4_1.Matrix4x4.lookAt(this._position, this._target, this._up);\r\n        // Make a view matrix from the camera matrix\r\n        return matrix_4x4_1.Matrix4x4.inverse(cameraMatrix);\r\n    }\r\n}\r\nexports.Camera = Camera;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/engine/rendering/camera.ts\n// module id = 39\n// module chunks = 0","\"use strict\";\r\n/* Copyright 2017 William Hill.\r\n\nLicensed under the Apache License, Version 2.0 (the “License”);\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\n   http://www.apache.org/licenses/LICENSE-2.0\r\n\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an “AS IS” BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License. */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst scene_controller_1 = require(\"../engine/UI/scene.controller\");\r\nconst layer_1 = require(\"../engine/UI/layer\");\r\nconst rectangle_1 = require(\"../engine/rendering/rectangle\");\r\nconst grass_1 = require(\"./objects/grass\");\r\nconst point_1 = require(\"../engine/math/point\");\r\nconst vector3_1 = require(\"../engine/math/vector3\");\r\nconst player_1 = require(\"../engine/entities/player\");\r\nconst enemy_1 = require(\"../engine/entities/enemy\");\r\nconst knight_1 = require(\"./objects/knight\");\r\nconst knight_enemy_1 = require(\"./objects/knight.enemy\");\r\nconst crate_1 = require(\"./objects/crate\");\r\nconst math_helper_1 = require(\"../engine/math/math.helper\");\r\nconst banner_1 = require(\"./UI/banner\");\r\nclass LogicPlane {\r\n    constructor(normal = vector3_1.Vector3.zero, d = 0) {\r\n        this.normal = normal;\r\n        this.d = d;\r\n    }\r\n}\r\nclass GameSceneController extends scene_controller_1.SceneController {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.worldBounds = new rectangle_1.Rectangle(50, 50, 200, 200);\r\n        this.knight = new knight_1.Knight(new vector3_1.Vector3(100, 0, 100));\r\n        this.knightEnemy = new knight_enemy_1.KnightEnemy(new vector3_1.Vector3(50, 0, 50));\r\n        this.cameraOriginalLocation = vector3_1.Vector3.zero;\r\n    }\r\n    sceneDidLoad() {\r\n        super.sceneDidLoad();\r\n        this.banner = new banner_1.Banner(rectangle_1.Rectangle.zero);\r\n        let layer = new layer_1.Layer();\r\n        layer.addSprite(this.banner);\r\n        this.scene.addLayer(layer);\r\n        // save intial camera location for futher use\r\n        this.cameraOriginalLocation = this.scene.camera.position;\r\n        let plane = new grass_1.Grass();\r\n        plane.position = new vector3_1.Vector3(-100, 0, -100);\r\n        this.scene.addObject3D(plane);\r\n        this.player = new player_1.Player();\r\n        this.player.sceneObject = this.knight;\r\n        this.enemy = new enemy_1.Enemy(8, this.knightEnemy);\r\n        this.scene.addEnemy(this.enemy);\r\n        this.scene.setPlayer(this.player);\r\n        this.scene.addObject3D(new crate_1.Crate(new vector3_1.Vector3(80, 1, 60)));\r\n        this.scene.addObject3D(new crate_1.Crate(new vector3_1.Vector3(120, 1, 80)));\r\n        this.scene.addObject3D(new crate_1.Crate(new vector3_1.Vector3(150, 1, 75)));\r\n        this.scene.addObject3D(new crate_1.Crate(new vector3_1.Vector3(70, 1, 107)));\r\n        this.scene.addObject3D(new crate_1.Crate(new vector3_1.Vector3(80, 1, 109)));\r\n        this.scene.addObject3D(new crate_1.Crate(new vector3_1.Vector3(40, 1, 60)));\r\n        this.scene.addObject3D(new crate_1.Crate(new vector3_1.Vector3(90, 1, 90)));\r\n        this.scene.addObject3D(new crate_1.Crate(new vector3_1.Vector3(110, 1, 110)));\r\n        this.knight.rotation.x = -90;\r\n        this.knight.scale = new vector3_1.Vector3(0.1, 0.1, 0.1);\r\n        this.knightEnemy.rotation.x = -90;\r\n        this.knightEnemy.scale = new vector3_1.Vector3(0.1, 0.1, 0.1);\r\n    }\r\n    sceneDidResize() {\r\n        super.sceneDidResize();\r\n        let w_2 = this.scene.width / 2.0;\r\n        this.banner.frame = new rectangle_1.Rectangle(0, 0, w_2, w_2 / 8.0);\r\n    }\r\n    touchesBegan(touch) {\r\n        super.touchesBegan(touch);\r\n        let directionVector = this.rayCaster.currentRay(new point_1.Point(touch.x, touch.y));\r\n        let plane = new LogicPlane(new vector3_1.Vector3(0, 10, 0), 0);\r\n        let intersection = this.intersect(directionVector, plane);\r\n        if (intersection != null) {\r\n            //update player rotation\r\n            let playerPos = this.player.sceneObject.position;\r\n            let xOffset = playerPos.x - intersection.x;\r\n            let zOffset = playerPos.z - intersection.z;\r\n            if (zOffset != 0) {\r\n                let angle = zOffset / xOffset;\r\n                let rotation = math_helper_1.MathHelper.radToDeg(Math.atan(angle));\r\n                var targetRotation = -90 - rotation;\r\n                if (playerPos.x < intersection.x) {\r\n                    targetRotation = 90 - rotation;\r\n                }\r\n                let playerRotation = this.player.sceneObject.rotation;\r\n                this.player.sceneObject.rotation = new vector3_1.Vector3(playerRotation.x, playerRotation.y, targetRotation);\r\n            }\r\n            // move player to location\r\n            this.player.movePlayerToLocation(intersection.x, intersection.z);\r\n        }\r\n    }\r\n    update() {\r\n        super.update();\r\n        let playerPos = this.scene.player.sceneObject.position;\r\n        if (playerPos.x <= this.worldBounds.x) {\r\n            playerPos.x = this.worldBounds.x;\r\n        }\r\n        if (playerPos.x >= this.worldBounds.width) {\r\n            playerPos.x = this.worldBounds.width;\r\n        }\r\n        if (playerPos.z >= this.worldBounds.height) {\r\n            playerPos.z = this.worldBounds.height;\r\n        }\r\n        if (playerPos.z >= this.worldBounds.height) {\r\n            playerPos.z = this.worldBounds.height;\r\n        }\r\n        if (playerPos.z <= this.worldBounds.y) {\r\n            playerPos.z = this.worldBounds.y;\r\n        }\r\n        let camPosition = new vector3_1.Vector3(playerPos.x + this.cameraOriginalLocation.x, playerPos.y + this.cameraOriginalLocation.y, playerPos.z + this.cameraOriginalLocation.z);\r\n        this.scene.camera.target = playerPos;\r\n        this.scene.camera.position = camPosition;\r\n    }\r\n    intersect(ray, plane) {\r\n        // from line = p + t * v\r\n        let p = ray.point; // (x1, y1, z1)\r\n        let v = ray.direction; // (Vx, Vz, Vz)\r\n        // from plane: ax + by + cz + d = 0\r\n        let n = plane.normal; // (a, b, c,)\r\n        let d = plane.d; // constant term of d\r\n        // dot product\r\n        let dot1 = vector3_1.Vector3.dot(n, v);\r\n        let dot2 = vector3_1.Vector3.dot(n, p);\r\n        if (dot1 == 0) {\r\n            return null; // no intersect\r\n        }\r\n        // find t = -(a*x1 + b*y1 + c*z1 + d) / (a*Vx + b*Vy + c*Vz)\r\n        let t = -(dot2 + d) / dot1;\r\n        return vector3_1.Vector3.add(p, vector3_1.Vector3.mul(v, t));\r\n    }\r\n}\r\nexports.GameSceneController = GameSceneController;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/game/game.scene.controller.ts\n// module id = 40\n// module chunks = 0","\"use strict\";\r\n/* Copyright 2017 William Hill.\r\n\nLicensed under the Apache License, Version 2.0 (the “License”);\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\n   http://www.apache.org/licenses/LICENSE-2.0\r\n\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an “AS IS” BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License. */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vector3_1 = require(\"../math/vector3\");\r\nclass Player {\r\n    update(dt) { }\r\n    movePlayerToLocation(x, z) {\r\n        this.sceneObject.setTarget(new vector3_1.Vector3(x, 0, z));\r\n    }\r\n}\r\nexports.Player = Player;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/engine/entities/player.ts\n// module id = 41\n// module chunks = 0","\"use strict\";\r\n/* Copyright 2017 William Hill.\r\n\nLicensed under the Apache License, Version 2.0 (the “License”);\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\n   http://www.apache.org/licenses/LICENSE-2.0\r\n\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an “AS IS” BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License. */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vector3_1 = require(\"../math/vector3\");\r\nconst math_helper_1 = require(\"../math/math.helper\");\r\nclass Enemy {\r\n    constructor(movementSpeed, sceneObject) {\r\n        this.movementSpeed = movementSpeed;\r\n        this.sceneObject = sceneObject;\r\n        this.watchRadius = 10;\r\n        this.attackRadius = 3;\r\n        this.attackDelay = 1; //in seconds\r\n        this.timeLeftToAttack = 0;\r\n        sceneObject.speed = movementSpeed;\r\n    }\r\n    update(dt) {\r\n        const player = this.sceneObject.scene.player;\r\n        const playerPos = player.sceneObject.position;\r\n        let isInRange = (Math.pow(this.sceneObject.position.x - playerPos.x, 2) + Math.pow(this.sceneObject.position.z - playerPos.z, 2)) < Math.pow(this.watchRadius, 2);\r\n        if (isInRange) {\r\n            let xOffset = playerPos.x - this.sceneObject.position.x;\r\n            let zOffset = playerPos.z - this.sceneObject.position.z;\r\n            if (zOffset != 0) {\r\n                let angle = zOffset / xOffset;\r\n                var rotation = math_helper_1.MathHelper.radToDeg(Math.atan(angle));\r\n                rotation = 90 - rotation;\r\n                if (playerPos.x < this.sceneObject.position.x) {\r\n                    rotation = -180 + rotation;\r\n                }\r\n                this.sceneObject.rotation = new vector3_1.Vector3(-90, 0, rotation);\r\n            }\r\n            this.sceneObject.setTarget(new vector3_1.Vector3(playerPos.x, this.sceneObject.position.y, playerPos.z));\r\n            this.sceneObject.position.print();\r\n        }\r\n        else {\r\n            this.sceneObject.setTarget(null);\r\n        }\r\n        this.timeLeftToAttack -= dt;\r\n        if (this.timeLeftToAttack < 0) {\r\n            this.timeLeftToAttack = 0;\r\n        }\r\n    }\r\n}\r\nexports.Enemy = Enemy;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/engine/entities/enemy.ts\n// module id = 42\n// module chunks = 0","\"use strict\";\r\n/* Copyright 2017 William Hill.\r\n\nLicensed under the Apache License, Version 2.0 (the “License”);\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\n   http://www.apache.org/licenses/LICENSE-2.0\r\n\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an “AS IS” BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License. */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst object3d_1 = require(\"../../engine/rendering/objects/object3d\");\r\nconst shared_geometry_1 = require(\"../../engine/rendering/objects/shared.geometry\");\r\nconst shared_textures_1 = require(\"../../engine/rendering/shared.textures\");\r\nconst vector3_1 = require(\"../../engine/math/vector3\");\r\nconst vector2_1 = require(\"../../engine/math/vector2\");\r\nconst boxCollider_1 = require(\"../../engine/physics/boxCollider\");\r\nclass Knight extends object3d_1.Object3D {\r\n    onInit() {\r\n        this.model = shared_geometry_1.SharedGeometry.Instance.modelForName(\"knight\");\r\n        this.texture = shared_textures_1.SharedTextures.Instance.getTexture(\"knight\");\r\n        this.collider = new boxCollider_1.BoxCollider(new vector3_1.Vector3(0, -0.5, 0), new vector2_1.Vector2(2, 2));\r\n    }\r\n}\r\nexports.Knight = Knight;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/game/objects/knight.ts\n// module id = 43\n// module chunks = 0","\"use strict\";\r\n/* Copyright 2017 William Hill.\r\n\nLicensed under the Apache License, Version 2.0 (the “License”);\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\n   http://www.apache.org/licenses/LICENSE-2.0\r\n\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an “AS IS” BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License. */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst object3d_1 = require(\"../../engine/rendering/objects/object3d\");\r\nconst shared_geometry_1 = require(\"../../engine/rendering/objects/shared.geometry\");\r\nconst shared_textures_1 = require(\"../../engine/rendering/shared.textures\");\r\nconst vector3_1 = require(\"../../engine/math/vector3\");\r\nconst vector2_1 = require(\"../../engine/math/vector2\");\r\nconst boxCollider_1 = require(\"../../engine/physics/boxCollider\");\r\nclass KnightEnemy extends object3d_1.Object3D {\r\n    onInit() {\r\n        this.model = shared_geometry_1.SharedGeometry.Instance.modelForName(\"knight\");\r\n        this.texture = shared_textures_1.SharedTextures.Instance.getTexture(\"knight-enemy\");\r\n        this.collider = new boxCollider_1.BoxCollider(new vector3_1.Vector3(0, -0.5, 0), new vector2_1.Vector2(2, 2));\r\n    }\r\n}\r\nexports.KnightEnemy = KnightEnemy;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/game/objects/knight.enemy.ts\n// module id = 44\n// module chunks = 0","\"use strict\";\r\n/* Copyright 2017 William Hill.\r\n\nLicensed under the Apache License, Version 2.0 (the “License”);\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\n   http://www.apache.org/licenses/LICENSE-2.0\r\n\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an “AS IS” BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License. */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst object3d_1 = require(\"../../engine/rendering/objects/object3d\");\r\nconst shared_geometry_1 = require(\"../../engine/rendering/objects/shared.geometry\");\r\nconst shared_textures_1 = require(\"../../engine/rendering/shared.textures\");\r\nconst vector3_1 = require(\"../../engine/math/vector3\");\r\nconst vector2_1 = require(\"../../engine/math/vector2\");\r\nconst boxCollider_1 = require(\"../../engine/physics/boxCollider\");\r\nclass Crate extends object3d_1.Object3D {\r\n    onInit() {\r\n        this.model = shared_geometry_1.SharedGeometry.Instance.modelForName(\"crate\");\r\n        this.texture = shared_textures_1.SharedTextures.Instance.getTexture(\"crate\");\r\n        this.collider = new boxCollider_1.BoxCollider(new vector3_1.Vector3(0, -0.5, 0), new vector2_1.Vector2(2, 2));\r\n    }\r\n}\r\nexports.Crate = Crate;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/game/objects/crate.ts\n// module id = 45\n// module chunks = 0","\"use strict\";\r\n/* Copyright 2017 William Hill.\r\n\nLicensed under the Apache License, Version 2.0 (the “License”);\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\n   http://www.apache.org/licenses/LICENSE-2.0\r\n\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an “AS IS” BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License. */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst sprite_1 = require(\"../../engine/rendering/sprite\");\r\nconst shared_textures_1 = require(\"../../engine/rendering/shared.textures\");\r\nclass Banner extends sprite_1.Sprite {\r\n    onInit() {\r\n        this.texture = shared_textures_1.SharedTextures.Instance.getTexture(\"banner\");\r\n    }\r\n}\r\nexports.Banner = Banner;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/game/UI/banner.ts\n// module id = 46\n// module chunks = 0","\"use strict\";\r\n/* Copyright 2017 William Hill.\r\n\nLicensed under the Apache License, Version 2.0 (the “License”);\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\n   http://www.apache.org/licenses/LICENSE-2.0\r\n\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an “AS IS” BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License. */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/// Class responsible for managing touches on various elements\r\nclass GestureRecognizer {\r\n    /// Parameter action - an action to be performed when this gesture recognizer is invoked.\r\n    constructor(action) {\r\n        this.action = action;\r\n    }\r\n    /// Runs the stored action\r\n    invoke() {\r\n        if (this.action != null) {\r\n            this.action(); // Perform the stored action\r\n        }\r\n    }\r\n}\r\nexports.GestureRecognizer = GestureRecognizer;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/engine/UI/gesture.recognizer.ts\n// module id = 47\n// module chunks = 0","\"use strict\";\r\n/* Copyright 2017 William Hill.\r\n\nLicensed under the Apache License, Version 2.0 (the “License”);\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\n   http://www.apache.org/licenses/LICENSE-2.0\r\n\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an “AS IS” BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License. */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst sprite_1 = require(\"../../engine/rendering/sprite\");\r\nconst shared_textures_1 = require(\"../../engine/rendering/shared.textures\");\r\nclass Button extends sprite_1.Sprite {\r\n    onInit() {\r\n        this.texture = shared_textures_1.SharedTextures.Instance.getTexture(\"play-button\");\r\n        console.log(\"Button texture \" + this.texture);\r\n    }\r\n}\r\nexports.Button = Button;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/game/UI/button.ts\n// module id = 48\n// module chunks = 0","\"use strict\";\r\n/* Copyright 2017 William Hill.\r\n\nLicensed under the Apache License, Version 2.0 (the “License”);\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\n   http://www.apache.org/licenses/LICENSE-2.0\r\n\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an “AS IS” BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License. */\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/// Class responsible for managing resources\r\nclass Resources {\r\n    constructor() {\r\n        this.cache = new Map();\r\n    }\r\n    /// Loads the resource in to the cache\r\n    load(res) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (this.cache.get(res)) {\r\n                return this.cache.get(res);\r\n            }\r\n            console.log('Loading resource', res);\r\n            if (res.type == Type.TEXT) {\r\n                return fetch(res.url)\r\n                    .then(res => {\r\n                    if (res.ok) {\r\n                        return res.text();\r\n                    }\r\n                    else {\r\n                        throw Error(res.statusText);\r\n                    }\r\n                })\r\n                    .then(text => {\r\n                    this.cache.set(res, text);\r\n                    return text;\r\n                });\r\n            }\r\n            else if (res.type == Type.IMAGE) {\r\n                const img = new Image();\r\n                img.src = res.url;\r\n                return new Promise((resolve, reject) => {\r\n                    img.onload = () => {\r\n                        resolve(img);\r\n                    };\r\n                    img.onerror = () => {\r\n                        reject(img);\r\n                    };\r\n                });\r\n            }\r\n        });\r\n    }\r\n    /// Returns resource with the given reference name or nil\r\n    getResourceWithName(name) {\r\n        this.cache.forEach((value, key) => {\r\n            if (key.name == name) {\r\n                return value;\r\n            }\r\n        });\r\n        return null;\r\n    }\r\n    /// Removes the resource from the cache\r\n    remove(res) {\r\n        this.cache.delete(res);\r\n    }\r\n}\r\nexports.Resources = Resources;\r\n;\r\nvar Type;\r\n(function (Type) {\r\n    Type[Type[\"TEXT\"] = 0] = \"TEXT\";\r\n    Type[Type[\"IMAGE\"] = 1] = \"IMAGE\";\r\n})(Type = exports.Type || (exports.Type = {}));\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/engine/resources.ts\n// module id = 49\n// module chunks = 0"],"sourceRoot":""}